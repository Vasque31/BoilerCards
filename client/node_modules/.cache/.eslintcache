[{"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\index.js":"1","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\App.js":"3","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\SavedIcon.js":"4","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\RegistrationPage.js":"5","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\signInPage.js":"6","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomePage.js":"7","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js":"8","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Header.js":"9","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Settings.js":"10","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\MyLibrary.js":"11","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFolder.js":"12","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js":"13","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js":"14","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Folder.js":"15","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\EditFlashcard.js":"16","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeClasses.js":"17","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Achievements.js":"18","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeLibrary.js":"19"},{"size":820,"mtime":1666578725592,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1666578725593,"results":"22","hashOfConfig":"21"},{"size":1758,"mtime":1666908564420,"results":"23","hashOfConfig":"21"},{"size":624,"mtime":1666578725580,"results":"24","hashOfConfig":"21"},{"size":3174,"mtime":1666578725580,"results":"25","hashOfConfig":"21"},{"size":3434,"mtime":1666914731490,"results":"26","hashOfConfig":"21"},{"size":517,"mtime":1666578725578,"results":"27","hashOfConfig":"21"},{"size":8795,"mtime":1667090879354,"results":"28","hashOfConfig":"21"},{"size":9906,"mtime":1666916091199,"results":"29","hashOfConfig":"21"},{"size":1676,"mtime":1666907276319,"results":"30","hashOfConfig":"21"},{"size":1496,"mtime":1666578725578,"results":"31","hashOfConfig":"21"},{"size":2061,"mtime":1666915967014,"results":"32","hashOfConfig":"21"},{"size":3778,"mtime":1666578725574,"results":"33","hashOfConfig":"21"},{"size":3429,"mtime":1666915425249,"results":"34","hashOfConfig":"21"},{"size":8023,"mtime":1666895579227,"results":"35","hashOfConfig":"21"},{"size":2193,"mtime":1666578725575,"results":"36","hashOfConfig":"21"},{"size":516,"mtime":1666578725577,"results":"37","hashOfConfig":"21"},{"size":506,"mtime":1666578725573,"results":"38","hashOfConfig":"21"},{"size":2462,"mtime":1666915055925,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"1vk9hi7",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"44"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"44"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\index.js",["110","111"],[],"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport RegistrationPage from \"./Components/RegistrationPage\";\r\nimport SavedIcon from \"./Components/SavedIcon\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n//ReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n\t    <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n  //document.getElementById(\"root\");\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\App.js",["112","113","114","115"],[],"import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport SignInPage from \"./Components/signInPage.js\";\r\nimport HomePage from \"./Components/HomePage.js\";\r\nimport Header from './Components/Header.js';\r\nimport Settings from \"./Components/Settings.js\";\r\nimport CreateFlashCard from './Components/CreateFlashCard';\r\nimport RegistrationPage from './Components/RegistrationPage';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport CreateFolder from './Components/CreateFolder';\r\nimport MyLibrary from './Components/MyLibrary';\r\nimport SavedIcon from './Components/SavedIcon';\r\nimport ChangeCredentials from './Components/ChangeCredentials';\r\nimport Folder from './Components/Folder';\r\nimport ViewFlashCard from './Components/ViewFlashcard.js'\r\nimport EditFlashcard from './Components/EditFlashcard';\r\nimport { useCookies } from 'react-cookie';\r\nfunction App() {\r\n\r\n  return (\r\n    <div  className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<SignInPage/>} />\r\n        <Route path=\"/register\" element={<RegistrationPage/>} />\r\n        <Route path=\"/HomePage\" element={<HomePage/>} /> {/*path=\"/HomePage/:id\"*/}\r\n        <Route path=\"/mylibrary\" element={<MyLibrary/>} />\r\n        <Route path=\"/settings\" element={<Settings/>} />\r\n        <Route path=\"/folder\" element={<Folder/>} />\r\n        <Route path=\"/createflashcardset\" element={<CreateFlashCard/>}/>\r\n        <Route path=\"/changecredentials\" element={<ChangeCredentials/>} />\r\n        <Route path=\"/flashcard\" element={<ViewFlashCard/>} />\r\n        <Route path=\"/editflashcard\" element={<EditFlashcard/>} />\r\n        <Route path=\"/saveicon\" element={<SavedIcon/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\SavedIcon.js",["116","117"],[],"import \"./SavedIcon.css\";\r\nimport saveicon from \"../images/saveicon.png\";\r\nimport React from \"react\";\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction SavedIcon() {\r\n\tconst navigate = useNavigate();\r\n\tfunction closeIcon() {\r\n\t\tnavigate(\"/HomePage\");\r\n\t}\r\n\r\n\treturn (\r\n\t  <div className=\"saveicon\">\r\n\t\t<CloseButton variant= \"black\" onClick={() => navigate(-1)}/>\r\n\t\t<img className=\"photo\" src= {saveicon}/>\r\n\t\t<p className=\"caption-text\"> Saved </p>\r\n\t  </div>\t\r\n\t);\r\n} \r\n\r\n/*function closeIcon() {\r\n\tnavigate(\"/HomePage\");\r\n}*/\r\n\r\nexport default SavedIcon;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\RegistrationPage.js",["118","119","120","121","122","123"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"./signInPage.css\";\r\nimport mylogo from \"../images/PurdueTrain.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n//Use states for Sign In\r\n\r\nconst errors = {\r\n    uname: \"Invalid Username\",\r\n    pass: \"Invalid Password\"\r\n};\r\n function checkvalidusername(str) {\r\n    const usernameRegex = /^[a-zA-Z0-9]{4,15}$/;\r\n    if (usernameRegex.test(str)) {\r\n        return true;\r\n    } else {\r\n      console.log(\"wrong format of username\");\r\n      return false;\r\n    }\r\n  }\r\nfunction checkvalidpassword(str) {\r\n    const passwordRegex = /^[A-Za-z0-9#?!@$%^&*-]{6,25}$/;\r\n    if (passwordRegex.test(str)) {\r\n      console.log(\"nicepassword!: \" + str);\r\n      return true;\r\n    } else {\r\n      console.log(\"wrong format of password\");\r\n      return false;\r\n    }\r\n  }  \r\nfunction SignInPage() {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const navigate = useNavigate();\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n    \r\n\r\n    const handleSignUp = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/register\");\r\n        //Call to backend to check validity\r\n\r\n    };\r\n    const handleCreateAccount = async (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n\r\n        const registrationInfo = {\r\n            username: usernameRef.current.value,\r\n            password: passwordRef.current.value\r\n        }\r\n        if(checkvalidpassword(registrationInfo.password)&&checkvalidusername(registrationInfo.username) ){\r\n            console.log(registrationInfo);\r\n            let res = await axios.post(\"http://localhost:3001/createaccount\", {\r\n                registrationInfo: registrationInfo,\r\n                });\r\n            if(res.data===true){\r\n                navigate(\"/\");\r\n            }else{\r\n                alert(\"username already exist\");\r\n        }\r\n        }\r\n        else{\r\n            alert(\"wrong format\");\r\n        }\r\n        \r\n    };\r\n    return (\r\n        <div className = \"login-form\">\r\n            <form onSubmit = {handleCreateAccount}>\r\n                <img alt = \"Logo\" className = \"photo\" src= {mylogo}/>\r\n\t\t\t\t<h1 style={{textAlign: \"center\", color: \"gold\"}}>Create BoilerCards Account</h1>\r\n                <div className = \"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Username</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Enter Username\" ref={usernameRef} required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" ref={passwordRef} required />\r\n                </div>\r\n                \r\n                <div className=\"button-container\">\r\n                    <input type=\"Submit\" value=\"Create Account\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\signInPage.js",["124","125","126","127","128","129","130"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"./signInPage.css\";\r\nimport mylogo from \"../images/PurdueTrain.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport cookie from 'react-cookies'\r\n//Use states for Sign In\r\nconst errors = {\r\n    uname: \"Invalid Username\",\r\n    pass: \"Invalid Password\"\r\n};\r\n export var libstorage = null;\r\n\r\nfunction SignInPage() {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [cookie, setCookie] = useCookies(['userid']);\r\n    const navigate = useNavigate();\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const handleSignUp = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/register\");\r\n        //Call to backend to check validity\r\n\r\n    };\r\n    \r\n    const handleSignIn = async (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        const ip = await axios.get('https://geolocation-db.com/json/');\r\n        const logginInfo = {\r\n          username: usernameRef.current.value,\r\n          password: passwordRef.current.value,\r\n          ip:ip.data.IPv4,\r\n        };\r\n        console.log(logginInfo);\r\n        //Call to backend to check validity\r\n        //if good link to homepage with the persons info\r\n       let res = await axios.post(\"http://localhost:3001/signin\", {\r\n          logginfo: logginInfo,\r\n        }); \r\n        console.log(res.data);\r\n        let data = res.data;\r\n        if(data!==0){\r\n            // eslint-disable-next-line react-hooks/rules-of-hooks\r\n            setCookie('userid', data, { path: '/' });\r\n            console.log(getCookie('userid'));\r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:data,\r\n            });\r\n            \r\n            console.log(res.data);\r\n            libstorage = res.data;\r\n         \r\n           \r\n            navigate(\"/HomePage\");\r\n        }      \r\n        else{\r\n            alert(\"incorrect information\");\r\n        }\r\n       \r\n      };\r\n    return (\r\n        <div className = \"login-form\">\r\n            <form onSubmit = {handleSignIn}>\r\n                <img alt = \"Logo\" className = \"photo\" src= {mylogo}/>\r\n                <h1 style={{textAlign: \"center\", color: \"gold\"}}>Welcome to BoilerCards</h1>\r\n                <h2 style={{textAlign: \"center\", color: \"gold\"}}>Sign In</h2>\r\n                <div className = \"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Username</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Enter Username\" ref={usernameRef} required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" ref={passwordRef} required />\r\n                </div>\r\n               \r\n                <div className=\"button-container\">\r\n                    <input type=\"Button\" value=\"Sign-Up\" onClick = {handleSignUp}/>\r\n                    <input type=\"Submit\" value=\"Sign-In\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomePage.js",["131","132"],[],"import React, { useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Achievements from \"./Achievements.js\";\r\nimport HomeLibrary from \"./HomeLibrary.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport HomeClasses from './HomeClasses.js';\r\nimport \"./HomePage.css\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n\r\n            <Header/>\r\n            <Achievements/>\r\n            <HomeClasses/>\r\n            <HomeLibrary/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js",["133","134"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Header.js",["135"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Settings.js",["136","137","138","139"],[],"import React, { useState } from \"react\";\r\nimport \"./Settings.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Settings() {\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['userid']);\r\n    const handleClick = () => {\r\n        removeCookie('userid');\r\n        navigate(\"/\");\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"settings\">\r\n                <div style={{textAlign: \"left\", fontSize: \" 1.5rem\"}}>\r\n                    <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n                </div>\r\n                <header style={{fontSize: '3.5rem', color: 'gold'}}>BoilerCard Profile Settings</header>\r\n                <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Link to=\"/changecredentials\">\r\n                            <Button variant=\"Light\">\r\n                                    Change Credentials\r\n                                </Button>\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item action>\r\n                        <Button variant=\"Light\" onClick={handleClick}>\r\n                                    Logout\r\n                            </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\MyLibrary.js",["140","141","142"],[],"import React, { useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport { libstorage } from \"./signInPage\";\r\nimport axios from \"axios\";\r\n\r\nfunction MyLibrary() {\r\n    const navigate = useNavigate();\r\n    const handleSeeMore = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/mylibrary\");\r\n        \r\n    };\r\n\r\n    return (\r\n        \r\n        <div className=\"box\">\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n        <h1 className=\"section-title\">My Library</h1>\r\n        <div style ={{paddingTop: \"0.5rem\"}}>\r\n            <Button variant=\"link\" size= \"sm\" className= \"see-more\" onClick={handleSeeMore}>See All</Button>\r\n        </div>\r\n        <div className= \"library-box\">\r\n            {libstorage.map(item => {\r\n                return (\r\n                    <div>\r\n                        {/*<h1>{item._id}</h1>*/}\r\n                        <button className= \"library-buttons\" value={item._id}>\r\n                            {item.foldername}\r\n                        </button>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MyLibrary;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFolder.js",["143","144","145","146"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js",["147"],[],"import React, { useRef, useState } from \"react\";\r\nimport \"./CreateFlashCard.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction checkvalidusername(str) {\r\n    const usernameRegex = /^[a-zA-Z0-9]{4,15}$/;\r\n    if (usernameRegex.test(str)) {\r\n        return true;\r\n    } else {\r\n      console.log(\"wrong format of username\");\r\n      return false;\r\n    }\r\n  }\r\nfunction checkvalidpassword(str) {\r\n    const passwordRegex = /^[A-Za-z0-9#?!@$%^&*-]{6,25}$/;\r\n    if (passwordRegex.test(str)) {\r\n      console.log(\"nicepassword!: \" + str);\r\n      return true;\r\n    } else {\r\n      console.log(\"wrong format of password\");\r\n      return false;\r\n    }\r\n  }  \r\nfunction ChangeCredentials() {\r\n    const [oldusername, setOldUsername] = useState();\r\n    const [newusername, setNewUsername] = useState();\r\n    const [oldpassword, setOldPassword] = useState();\r\n    const [newpassword, setNewPassword] = useState();\r\n    const navigate = useNavigate();\r\n    \r\n    const handleSave = async (event) => {\r\n        event.preventDefault();\r\n        const newAccountInfo = {\r\n            oldusername:oldusername,\r\n            newusername:newusername,\r\n            oldpassword:oldpassword,\r\n            newpassword:newpassword\r\n        }\r\n        console.log(newAccountInfo);\r\n        if(checkvalidpassword(newpassword)&&checkvalidusername(newusername)){\r\n            let res = await axios.post(\"http://localhost:3001/changecredential\", {\r\n            oldusername:oldusername,\r\n            newusername:newusername,\r\n            oldpassword:oldpassword,\r\n            newpassword:newpassword\r\n            \r\n        });\r\n        if(res.data ===true){\r\n            alert(\"success\");\r\n            window.location.reload();\r\n        }else{\r\n            alert(\"password does not match\")\r\n        }\r\n        console.log(newAccountInfo);\r\n        }else{\r\n            alert(\"wrong format\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"general-box-create\">\r\n            <div style={{textAlign: \"left\", fontSize: \" 1.5rem\"}}>\r\n                    <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            <Form>\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>Old Username</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"oldusername\" placeholder=\"oldusername\" onChange={e => setOldUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>Old Password</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"oldpassword\" placeholder=\"oldpassword\" onChange={e => setOldPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>New Username</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"newusername\" placeholder=\"newusername\" onChange={e => setNewUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"newpassword\" placeholder=\"newpassword\" onChange={e => setNewPassword(e.target.value)} />\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <div style={{paddingTop: \"1rem\"}}>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                    Update Credentials\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeCredentials;\r\n","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Folder.js",["148","149","150","151","152"],[],"import React, { useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport {folder} from './HomeLibrary';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nexport var flashcards = null;\r\n \r\nfunction Folder() {\r\n    const navigate = useNavigate();\r\n    const handleFlashcardClick = async (id) => {\r\n        //prevents page reload\r\n        console.log(id);\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\", {\r\n            setid:id\r\n        });\r\n        flashcards = res.data;\r\n        console.log(flashcards);\r\n        navigate('/flashcard');\r\n    };\r\n    const [show, setShow] = useState(false);\r\n    const [info, setInfo] = useState(folder);\r\n    const [statePrivate, setPrivate] = useState(false);\r\n    const [TMPName, setTMPName] = useState(\"\");\r\n    const [showSetting, setShowSetting] = useState(false);\r\n    const [inputList, setinputList] = useState([{front:'', back:''}]);\r\n    \r\n    const [name, setName] = useState();\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:''}]);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n    } \r\n    const handleFolderNameChange = (e) => {\r\n        setTMPName(e.target.value);\r\n        console.log(TMPName);\r\n    }\r\n    const handleCreateFlashCardSet = async(event) => {\r\n        event.preventDefault();\r\n\r\n        const flashcardInfo = {\r\n            inputList:inputList,\r\n            name:name\r\n        }\r\n        let res = await axios.post(\"http://localhost:3001/createflashcardset\", {\r\n            inputList:flashcardInfo.inputList,\r\n            name:flashcardInfo.name,\r\n        });\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n        console.log(flashcardInfo);\r\n    }\r\n    const handleSave = async(event) => {\r\n        event.preventDefault();\r\n        console.log(info);\r\n        info.foldername = TMPName;\r\n    \r\n        let res = await axios.post(\"http://localhost:3001/editfolder\", {\r\n            folder: info\r\n        });\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setinputList([{front:'', back:''}]);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseSetting = () => {\r\n        setShowSetting(false);\r\n        setTMPName(\"\");\r\n        setPrivate(false);\r\n    }\r\n    const handleShowSetting = () => setShowSetting(true);\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            \r\n            <div className=\"box\">\r\n\r\n                <heading className=\"section-title\">{info.foldername}</heading>\r\n                <div style ={{textAlign: \"right\", paddingBottom: \"0.5rem\"}}>\r\n                    <Button variant=\"warning\" onClick={handleShow}>\r\n                        Create Flashcard Set\r\n                    </Button>\r\n                    &nbsp;&nbsp;\r\n                    <Button variant=\"warning\" onClick={handleShowSetting}>\r\n                        Folder Settings\r\n                    </Button>\r\n                </div>\r\n                <div className= \"library-box\">\r\n                    {Object.values(info.flashcardset).map(item => {\r\n                        return (\r\n                            <div>\r\n                                {/*<h1>{item._id}</h1>*/}\r\n                                <button className= \"library-buttons\" value={item._id} onClick={(e) => handleFlashcardClick(e.target.value)}>\r\n                                    {item.setname}\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Flashcard Set</h2>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name Of FlashCard Set</label>\r\n                    <input type=\"text\" name=\"flashcardSetName\" onChange={(e) => setName(e.target.value)} required />\r\n                    { inputList.map((x,i) => { \r\n                        return(\r\n                            <Form>\r\n                                <Form.Group style={{color: \"gold\"}}>\r\n                                    <h1>#{i+1}</h1>\r\n                                    <Form.Label>Front of Card</Form.Label>\r\n                                    <Form.Control type=\"text\" name= \"front\" placeholder=\"Front of FlashCard\" onChange={e => handleinputchange(e,i)}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group style={{color: \"gold\"}}>\r\n                                    <Form.Label>Back of Card</Form.Label>\r\n                                         <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        );\r\n                        })}\r\n                   <div style={{paddingTop: \"1rem\"}}>\r\n                            <Button varient= \"primary\" type=\"button\" onClick={handleaddmore}>\r\n                                Add FlashCard\r\n                            </Button>\r\n                        </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleCreateFlashCardSet}>\r\n                        Create FlashCard Set\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showSetting} onHide={handleCloseSetting} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Folder Settings</h2>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group style={{color: \"gold\"}}>\r\n                            <input onChange={e => handleFolderNameChange(e)}></input>\r\n                        </Form.Group>\r\n                    </Form>                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSetting}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Folder;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\EditFlashcard.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeClasses.js",["153"],[],"import React, { useState } from \"react\";\r\nimport \"./HomeClasses.css\";\r\n\r\nfunction HomeClasses() {\r\n\r\n    return (\r\n        <div className=\"box-classes\">\r\n            <h1 className=\"section-title\">My Classes</h1>\r\n            <div className= \"home-boxes\">\r\n                \r\n                <button className= \"block-buttons\"><img className= \"img-class\" src= {require(\"../images/PurdueTrain.png\")} alt=\"folder\"/></button>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeClasses;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Achievements.js",["154","155"],[],"import React, { useState } from \"react\";\r\nimport \"./Achievements.css\";\r\n\r\nfunction Achievements() {\r\n\r\n    return (\r\n        <div className=\"box-achievement\">\r\n            <h1 className=\"section-title\">Achievements</h1>\r\n            <div className= \"achievement-box\">\r\n                <button className= \"block-achievement\"><img className= \"img-achievement\" src= {require(\"../images/PurdueTrain.png\")} alt=\"my image\"/></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Achievements;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeLibrary.js",["156","157","158","159"],[],{"ruleId":"160","severity":1,"message":"161","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"164","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":17},{"ruleId":"160","severity":1,"message":"165","line":3,"column":17,"nodeType":"162","messageId":"163","endLine":3,"endColumn":25},{"ruleId":"160","severity":1,"message":"166","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":14},{"ruleId":"160","severity":1,"message":"167","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":20},{"ruleId":"160","severity":1,"message":"168","line":18,"column":10,"nodeType":"162","messageId":"163","endLine":18,"endColumn":20},{"ruleId":"160","severity":1,"message":"169","line":9,"column":11,"nodeType":"162","messageId":"163","endLine":9,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":16,"column":3,"nodeType":"172","endLine":16,"endColumn":43},{"ruleId":"160","severity":1,"message":"173","line":10,"column":7,"nodeType":"162","messageId":"163","endLine":10,"endColumn":13},{"ruleId":"160","severity":1,"message":"174","line":34,"column":12,"nodeType":"162","messageId":"163","endLine":34,"endColumn":25},{"ruleId":"160","severity":1,"message":"175","line":34,"column":27,"nodeType":"162","messageId":"163","endLine":34,"endColumn":43},{"ruleId":"160","severity":1,"message":"176","line":35,"column":12,"nodeType":"162","messageId":"163","endLine":35,"endColumn":23},{"ruleId":"160","severity":1,"message":"177","line":35,"column":25,"nodeType":"162","messageId":"163","endLine":35,"endColumn":39},{"ruleId":"160","severity":1,"message":"178","line":41,"column":11,"nodeType":"162","messageId":"163","endLine":41,"endColumn":23},{"ruleId":"160","severity":1,"message":"179","line":10,"column":8,"nodeType":"162","messageId":"163","endLine":10,"endColumn":14},{"ruleId":"160","severity":1,"message":"173","line":12,"column":7,"nodeType":"162","messageId":"163","endLine":12,"endColumn":13},{"ruleId":"160","severity":1,"message":"174","line":19,"column":12,"nodeType":"162","messageId":"163","endLine":19,"endColumn":25},{"ruleId":"160","severity":1,"message":"175","line":19,"column":27,"nodeType":"162","messageId":"163","endLine":19,"endColumn":43},{"ruleId":"160","severity":1,"message":"176","line":20,"column":12,"nodeType":"162","messageId":"163","endLine":20,"endColumn":23},{"ruleId":"160","severity":1,"message":"177","line":20,"column":25,"nodeType":"162","messageId":"163","endLine":20,"endColumn":39},{"ruleId":"160","severity":1,"message":"180","line":21,"column":12,"nodeType":"162","messageId":"163","endLine":21,"endColumn":18},{"ruleId":"160","severity":1,"message":"165","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"181","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":14},{"ruleId":"160","severity":1,"message":"182","line":76,"column":11,"nodeType":"162","messageId":"163","endLine":76,"endColumn":36},{"ruleId":"160","severity":1,"message":"183","line":77,"column":15,"nodeType":"162","messageId":"163","endLine":77,"endColumn":37},{"ruleId":"160","severity":1,"message":"184","line":20,"column":11,"nodeType":"162","messageId":"163","endLine":20,"endColumn":19},{"ruleId":"160","severity":1,"message":"165","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"185","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":12},{"ruleId":"160","severity":1,"message":"186","line":13,"column":12,"nodeType":"162","messageId":"163","endLine":13,"endColumn":19},{"ruleId":"160","severity":1,"message":"187","line":13,"column":21,"nodeType":"162","messageId":"163","endLine":13,"endColumn":30},{"ruleId":"160","severity":1,"message":"165","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"166","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":14},{"ruleId":"160","severity":1,"message":"188","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":13},{"ruleId":"160","severity":1,"message":"180","line":12,"column":12,"nodeType":"162","messageId":"163","endLine":12,"endColumn":18},{"ruleId":"160","severity":1,"message":"187","line":12,"column":20,"nodeType":"162","messageId":"163","endLine":12,"endColumn":29},{"ruleId":"160","severity":1,"message":"189","line":12,"column":31,"nodeType":"162","messageId":"163","endLine":12,"endColumn":43},{"ruleId":"160","severity":1,"message":"190","line":26,"column":17,"nodeType":"162","messageId":"163","endLine":26,"endColumn":20},{"ruleId":"160","severity":1,"message":"191","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":23},{"ruleId":"160","severity":1,"message":"192","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":19},{"ruleId":"160","severity":1,"message":"193","line":12,"column":8,"nodeType":"162","messageId":"163","endLine":12,"endColumn":20},{"ruleId":"160","severity":1,"message":"194","line":13,"column":8,"nodeType":"162","messageId":"163","endLine":13,"endColumn":25},{"ruleId":"160","severity":1,"message":"195","line":29,"column":18,"nodeType":"162","messageId":"163","endLine":29,"endColumn":25},{"ruleId":"160","severity":1,"message":"196","line":30,"column":12,"nodeType":"162","messageId":"163","endLine":30,"endColumn":24},{"ruleId":"160","severity":1,"message":"165","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"165","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":10,"column":56,"nodeType":"172","endLine":10,"endColumn":150},{"ruleId":"160","severity":1,"message":"180","line":13,"column":12,"nodeType":"162","messageId":"163","endLine":13,"endColumn":18},{"ruleId":"160","severity":1,"message":"187","line":13,"column":20,"nodeType":"162","messageId":"163","endLine":13,"endColumn":29},{"ruleId":"160","severity":1,"message":"189","line":13,"column":31,"nodeType":"162","messageId":"163","endLine":13,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":39,"column":5,"nodeType":"201","messageId":"202","endLine":41,"endColumn":11},"no-unused-vars","'RegistrationPage' is defined but never used.","Identifier","unusedVar","'SavedIcon' is defined but never used.","'useState' is defined but never used.","'Header' is defined but never used.","'CreateFolder' is defined but never used.","'useCookies' is defined but never used.","'closeIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'errors' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","'setErrorMessages' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'handleSignUp' is assigned a value but never used.","'cookie' is defined but never used.","'cookie' is assigned a value but never used.","'Button' is defined but never used.","'handleSaveFlashcardStatus' is assigned a value but never used.","'updatedflashcardstatus' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Form' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'axios' is defined but never used.","'removeCookie' is assigned a value but never used.","'res' is assigned a value but never used.","'useRef' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'setInfo' is assigned a value but never used.","'statePrivate' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]
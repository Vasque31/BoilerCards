[{"C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\index.js":"1","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\App.js":"2","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\reportWebVitals.js":"3","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\SavedIcon.js":"4","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\RegistrationPage.js":"5","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomePage.js":"6","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Header.js":"7","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\signInPage.js":"8","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Settings.js":"9","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js":"10","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\CreateFolder.js":"11","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\EditFlashcard.js":"12","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\MyLibrary.js":"13","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Folder.js":"14","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js":"15","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js":"16","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Achievements.js":"17","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomeClasses.js":"18","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomeLibrary.js":"19","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Deletepopup.js":"20"},{"size":820,"mtime":1667033270630,"results":"21","hashOfConfig":"22"},{"size":1758,"mtime":1667123414924,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1665689146873,"results":"24","hashOfConfig":"22"},{"size":624,"mtime":1667123410685,"results":"25","hashOfConfig":"22"},{"size":3174,"mtime":1665763956155,"results":"26","hashOfConfig":"22"},{"size":1071,"mtime":1667123414996,"results":"27","hashOfConfig":"22"},{"size":10489,"mtime":1667124951409,"results":"28","hashOfConfig":"22"},{"size":3444,"mtime":1667124215096,"results":"29","hashOfConfig":"22"},{"size":1676,"mtime":1667123415009,"results":"30","hashOfConfig":"22"},{"size":10084,"mtime":1667125668106,"results":"31","hashOfConfig":"22"},{"size":2061,"mtime":1667123414938,"results":"32","hashOfConfig":"22"},{"size":2193,"mtime":1667025675489,"results":"33","hashOfConfig":"22"},{"size":1496,"mtime":1667105064946,"results":"34","hashOfConfig":"22"},{"size":11528,"mtime":1667125231275,"results":"35","hashOfConfig":"22"},{"size":3913,"mtime":1667123964040,"results":"36","hashOfConfig":"22"},{"size":3778,"mtime":1665763956081,"results":"37","hashOfConfig":"22"},{"size":506,"mtime":1665689146598,"results":"38","hashOfConfig":"22"},{"size":516,"mtime":1665689146673,"results":"39","hashOfConfig":"22"},{"size":2546,"mtime":1667125317615,"results":"40","hashOfConfig":"22"},{"size":4720,"mtime":1667123414938,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"g0c2c5",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\index.js",["119","120"],[],"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport RegistrationPage from \"./Components/RegistrationPage\";\r\nimport SavedIcon from \"./Components/SavedIcon\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n//ReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n\t    <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n  //document.getElementById(\"root\");\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\App.js",["121","122","123","124"],[],"import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport SignInPage from \"./Components/signInPage.js\";\r\nimport HomePage from \"./Components/HomePage.js\";\r\nimport Header from './Components/Header.js';\r\nimport Settings from \"./Components/Settings.js\";\r\nimport CreateFlashCard from './Components/CreateFlashCard';\r\nimport RegistrationPage from './Components/RegistrationPage';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport CreateFolder from './Components/CreateFolder';\r\nimport MyLibrary from './Components/MyLibrary';\r\nimport SavedIcon from './Components/SavedIcon';\r\nimport ChangeCredentials from './Components/ChangeCredentials';\r\nimport Folder from './Components/Folder';\r\nimport ViewFlashCard from './Components/ViewFlashcard.js'\r\nimport EditFlashcard from './Components/EditFlashcard';\r\nimport { useCookies } from 'react-cookie';\r\nfunction App() {\r\n\r\n  return (\r\n    <div  className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<SignInPage/>} />\r\n        <Route path=\"/register\" element={<RegistrationPage/>} />\r\n        <Route path=\"/HomePage\" element={<HomePage/>} /> {/*path=\"/HomePage/:id\"*/}\r\n        <Route path=\"/mylibrary\" element={<MyLibrary/>} />\r\n        <Route path=\"/settings\" element={<Settings/>} />\r\n        <Route path=\"/folder\" element={<Folder/>} />\r\n        <Route path=\"/createflashcardset\" element={<CreateFlashCard/>}/>\r\n        <Route path=\"/changecredentials\" element={<ChangeCredentials/>} />\r\n        <Route path=\"/flashcard\" element={<ViewFlashCard/>} />\r\n        <Route path=\"/editflashcard\" element={<EditFlashcard/>} />\r\n        <Route path=\"/saveicon\" element={<SavedIcon/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\SavedIcon.js",["125","126"],[],"import \"./SavedIcon.css\";\r\nimport saveicon from \"../images/saveicon.png\";\r\nimport React from \"react\";\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction SavedIcon() {\r\n\tconst navigate = useNavigate();\r\n\tfunction closeIcon() {\r\n\t\tnavigate(\"/HomePage\");\r\n\t}\r\n\r\n\treturn (\r\n\t  <div className=\"saveicon\">\r\n\t\t<CloseButton variant= \"black\" onClick={() => navigate(-1)}/>\r\n\t\t<img className=\"photo\" src= {saveicon}/>\r\n\t\t<p className=\"caption-text\"> Saved </p>\r\n\t  </div>\t\r\n\t);\r\n} \r\n\r\n/*function closeIcon() {\r\n\tnavigate(\"/HomePage\");\r\n}*/\r\n\r\nexport default SavedIcon;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\RegistrationPage.js",["127","128","129","130","131","132"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"./signInPage.css\";\r\nimport mylogo from \"../images/PurdueTrain.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n//Use states for Sign In\r\n\r\nconst errors = {\r\n    uname: \"Invalid Username\",\r\n    pass: \"Invalid Password\"\r\n};\r\n function checkvalidusername(str) {\r\n    const usernameRegex = /^[a-zA-Z0-9]{4,15}$/;\r\n    if (usernameRegex.test(str)) {\r\n        return true;\r\n    } else {\r\n      console.log(\"wrong format of username\");\r\n      return false;\r\n    }\r\n  }\r\nfunction checkvalidpassword(str) {\r\n    const passwordRegex = /^[A-Za-z0-9#?!@$%^&*-]{6,25}$/;\r\n    if (passwordRegex.test(str)) {\r\n      console.log(\"nicepassword!: \" + str);\r\n      return true;\r\n    } else {\r\n      console.log(\"wrong format of password\");\r\n      return false;\r\n    }\r\n  }  \r\nfunction SignInPage() {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const navigate = useNavigate();\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n    \r\n\r\n    const handleSignUp = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/register\");\r\n        //Call to backend to check validity\r\n\r\n    };\r\n    const handleCreateAccount = async (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n\r\n        const registrationInfo = {\r\n            username: usernameRef.current.value,\r\n            password: passwordRef.current.value\r\n        }\r\n        if(checkvalidpassword(registrationInfo.password)&&checkvalidusername(registrationInfo.username) ){\r\n            console.log(registrationInfo);\r\n            let res = await axios.post(\"http://localhost:3001/createaccount\", {\r\n                registrationInfo: registrationInfo,\r\n                });\r\n            if(res.data===true){\r\n                navigate(\"/\");\r\n            }else{\r\n                alert(\"username already exist\");\r\n        }\r\n        }\r\n        else{\r\n            alert(\"wrong format\");\r\n        }\r\n        \r\n    };\r\n    return (\r\n        <div className = \"login-form\">\r\n            <form onSubmit = {handleCreateAccount}>\r\n                <img alt = \"Logo\" className = \"photo\" src= {mylogo}/>\r\n\t\t\t\t<h1 style={{textAlign: \"center\", color: \"gold\"}}>Create BoilerCards Account</h1>\r\n                <div className = \"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Username</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Enter Username\" ref={usernameRef} required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" ref={passwordRef} required />\r\n                </div>\r\n                \r\n                <div className=\"button-container\">\r\n                    <input type=\"Submit\" value=\"Create Account\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomePage.js",["133"],[],"import React, { useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Achievements from \"./Achievements.js\";\r\nimport HomeLibrary from \"./HomeLibrary.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport HomeClasses from './HomeClasses.js';\r\nimport Deletepopup from \"./Deletepopup.js\";\r\nimport { handleShowDelete } from \"./Deletepopup.js\";\r\nimport \"./HomePage.css\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n            <Deletepopup/>\r\n            <row>\r\n                <Button value={0} onClick={(e) => handleShowDelete(e.target.value, \"flashcard\")}> Test flashcard delete</Button>\r\n                <Button value={1} onClick={(e) => handleShowDelete(e.target.value, \"flashcardset\")}> Test flashcardset delete</Button>\r\n                <Button value={2} onClick={(e) => handleShowDelete(e.target.value, \"folder\")}> Test folder delete</Button>\r\n            </row>\r\n            <Header/>\r\n            <Achievements/>\r\n            <HomeClasses/>\r\n            <HomeLibrary/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Header.js",["134","135","136","137","138"],[],"import React, { useState } from \"react\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport \"./Header.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\nfunction Header() {\r\n    const [show, setShow] = useState(false);\r\n    const [destFolder, setDestFolder] = useState(\"\");\r\n    const [showFolder, setShowFolder] = useState(false);\r\n    const [inputList, setinputList] = useState([{front:'', back:''}]);\r\n    const [folderName, setFoldername] = useState();\r\n    const [name, setName] = useState();\r\n    const navigate = useNavigate();\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:''}]);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n    } \r\n    const handleSave = async(event) => {\r\n        event.preventDefault();\r\n\r\n        const flashcardInfo = {\r\n            inputList:inputList,\r\n            name:name\r\n        }\r\n        let res = await axios.post(\"http://localhost:3001/createflashcardsethome\", {\r\n            inputList:flashcardInfo.inputList,\r\n            name:flashcardInfo.name,\r\n        });\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n        console.log(flashcardInfo);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setinputList([{front:'', back:''}]);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleShowFolder = () => setShowFolder(true);\r\n    const handleCloseFolder = () => {\r\n        setShowFolder(false);\r\n \r\n    }\r\n    const handleSaveFolder = async(event) => {\r\n        await axios.post(\"http://localhost:3001/createfolder\",{\r\n            folderName:folderName,\r\n            uid:getCookie('userid'),    \r\n        });\r\n        window.location.reload();\r\n    } \r\n    return (\r\n        <div className=\"app\">\r\n            <Navbar bg=\"warning\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand>BoilerCards</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link>\r\n                            <Link to=\"/HomePage\">\r\n                                <Button variant=\"Light\">\r\n                                    Home\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <Form className=\"d-flex\">\r\n                            <Form.Control\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"me-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"dark\">Search</Button>\r\n                        </Form>\r\n                        <NavDropdown title=\"Create\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">\r\n                                Class\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item>\r\n                                <Button variant=\"Light\" onClick={handleShowFolder}>\r\n                                    Folder\r\n                                </Button>\r\n                                <div>\r\n                                <Modal show={showFolder} onHide={handleCloseFolder} backdrop=\"static\" dialogClassName=\"general-box-createfolder\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>\r\n                                            <h1 style ={{fontSize: \"3rem\", color:\"gold\", textAlign:\"center\"}}>BOILERCARDS</h1>\r\n                                            <h2 style ={{fontSize: \"1rem\", color:\"gold\", textAlign:\"center\"}}>Create Folder</h2>\r\n                                        </Modal.Title>\r\n                                        \r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name of New Folder: </label>\r\n                                            <input type=\"text\" name = \"folderName\" onChange={(e) => setFoldername(e.target.value)} required />\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" onClick={handleSaveFolder}>\r\n                                                Save New Folder\r\n                                            </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                                </div>\r\n                            </NavDropdown.Item>\r\n                            \r\n                            <NavDropdown.Item>\r\n                                    <Button variant=\"Light\" onClick={handleShow}>\r\n                                        Flashcard Set\r\n                                    </Button>\r\n                                    <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>\r\n                                            <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                                            <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Flashcard Set</h2>\r\n                                            </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            <DropdownButton id=\"dropdown-basic-button\" title=\"Destination Folder\">\r\n                                                \r\n                                            </DropdownButton>\r\n                                            <h1></h1>\r\n                                            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name Of FlashCard Set</label>\r\n                                            <input type=\"text\" name=\"flashcardSetName\" onChange={(e) => setName(e.target.value)} required />\r\n                                            {\r\n                                            inputList.map((x,i) => { \r\n                                                return(\r\n                                                <Form>\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <h1>#{i+1}</h1>\r\n                                                        <Form.Label>Front of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"front\" placeholder=\"Front of FlashCard\" onChange={e => handleinputchange(e,i)}/>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <Form.Label>Back of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                                );\r\n                                            })}\r\n                                            <div style={{paddingTop: \"1rem\"}}>\r\n                                                <Button varient= \"primary\" type=\"button\" onClick={handleaddmore}>\r\n                                                    Add FlashCard\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" onClick={handleSave}>\r\n                                                Save Changes\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                            </NavDropdown.Item> \r\n                        </NavDropdown>\r\n                        \r\n                        <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">\r\n                                Account Data\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item>\r\n                                <Link to=\"/settings\">\r\n                                    <Button variant=\"Light\">\r\n                                        Settings\r\n                                    </Button>\r\n                                </Link>\r\n                            </NavDropdown.Item> \r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    </Navbar.Collapse>  \r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\signInPage.js",["139","140","141","142","143","144","145"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"./signInPage.css\";\r\nimport mylogo from \"../images/PurdueTrain.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport cookie from 'react-cookies'\r\n//Use states for Sign In\r\nconst errors = {\r\n    uname: \"Invalid Username\",\r\n    pass: \"Invalid Password\"\r\n};\r\n export var libstorage = null;\r\n\r\nfunction SignInPage() {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [cookie, setCookie] = useCookies([]);\r\n    const navigate = useNavigate();\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const handleSignUp = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/register\");\r\n        //Call to backend to check validity\r\n\r\n    };\r\n    \r\n    const handleSignIn = async (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        const ip = await axios.get('https://geolocation-db.com/json/');\r\n        const logginInfo = {\r\n          username: usernameRef.current.value,\r\n          password: passwordRef.current.value,\r\n          ip:ip.data.IPv4,\r\n        };\r\n        console.log(logginInfo);\r\n        //Call to backend to check validity\r\n        //if good link to homepage with the persons info\r\n       let res = await axios.post(\"http://localhost:3001/signin\", {\r\n          logginfo: logginInfo,\r\n        }); \r\n        console.log(res.data);\r\n        let data = res.data;\r\n        if(data!==0){\r\n            // eslint-disable-next-line react-hooks/rules-of-hooks\r\n            setCookie('userid', data, { path: '/' });\r\n            console.log(getCookie('userid'));\r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:data,\r\n            });\r\n            \r\n            console.log(res.data);\r\n            libstorage = res.data;\r\n         \r\n\r\n            navigate(\"/HomePage\");\r\n        }      \r\n        else{\r\n            alert(\"incorrect information\");\r\n        }\r\n       \r\n      };\r\n    return (\r\n        <div className = \"login-form\">\r\n            <form onSubmit = {handleSignIn}>\r\n                <img alt = \"Logo\" className = \"photo\" src= {mylogo}/>\r\n                <h1 style={{textAlign: \"center\", color: \"gold\"}}>Welcome to BoilerCards</h1>\r\n                <h2 style={{textAlign: \"center\", color: \"gold\"}}>Sign In</h2>\r\n                <div className = \"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Username</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Enter Username\" ref={usernameRef} required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label style={{textAlign: \"left\"}}>Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" ref={passwordRef} required />\r\n                </div>\r\n               \r\n                <div className=\"button-container\">\r\n                    <input type=\"Button\" value=\"Sign-Up\" onClick = {handleSignUp}/>\r\n                    <input type=\"Submit\" value=\"Sign-In\" />\r\n                </div>\r\n             \r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Settings.js",["146","147","148","149"],[],"import React, { useState } from \"react\";\r\nimport \"./Settings.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Settings() {\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['userid']);\r\n    const handleClick = () => {\r\n        removeCookie('userid');\r\n        navigate(\"/\");\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"settings\">\r\n                <div style={{textAlign: \"left\", fontSize: \" 1.5rem\"}}>\r\n                    <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n                </div>\r\n                <header style={{fontSize: '3.5rem', color: 'gold'}}>BoilerCard Profile Settings</header>\r\n                <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Link to=\"/changecredentials\">\r\n                            <Button variant=\"Light\">\r\n                                    Change Credentials\r\n                                </Button>\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item action>\r\n                        <Button variant=\"Light\" onClick={handleClick}>\r\n                                    Logout\r\n                            </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js",["150","151","152","153","154","155","156"],[],"import React, { useState } from \"react\";\r\nimport \"./ViewFlashcard.css\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport background from '../images/bk.png';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { flashcards } from \"./Folder.js\";\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from 'axios';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport { FlashcardArray } from \"react-quizlet-flashcard\";\r\n//export var flashcardid = null;\r\n\r\n\r\nexport var flashcardid = null;\r\nvar toDeleteFlashcard = {\r\n    front: \"defaultname flashcard\"\r\n};\r\n\r\nfunction ViewFlashcard() {\r\n    const [index, setIndex] = useState(0);\r\n    const [front, setFront] = useState();\r\n    const [back, setBack] = useState();\r\n    const [update, setUpdate] = useState(flashcards);\r\n    const [show, setShow] = useState(false);\r\n    const [showFlashcardDeleteConfirm, setShowFlashcardDeleteConfirm] = useState(false);\r\n    const handleCloseFlashDelCon = () => {setShowFlashcardDeleteConfirm(false);}\r\n    const handleShowFlashcardDeleteConfirm = async (id) => {\r\n        let res =await axios.post(\"http://localhost:3001/flsahcard\",{\r\n            flashcardid:id,\r\n        });\r\n        toDeleteFlashcard = res.data;\r\n        setShowFlashcardDeleteConfirm(true);\r\n    }\r\n    const handleDeleteFlashcard = async (flashcard) => {\r\n        const id = flashcard._id;\r\n        await axios.post(\"http://localhost:3001/deletFlashcard\",{\r\n            flashcardid:id,\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const [inputList, setinputList] = useState([{front:'', back:''}]);\r\n    const navigate = useNavigate();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [statePrivate, setPrivate] = useState(false);\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:''}]);\r\n    }\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    const handleeditClick = async (id) => {\r\n        console.log(id);\r\n        /*let res = await axios.post(\"http://localhost:3001/edit\", {\r\n            flashcardid:id\r\n       \r\n        });*/\r\n        \r\n        flashcardid = id;\r\n        navigate(\"/editflashcard\");\r\n\r\n    }\r\n\r\n    \r\n    const handledeleteClick = async (flashcardid, type) => {\r\n        handleShowFlashcardDeleteConfirm(flashcardid, type); //show delete passing flashcard object\r\n    }\r\n\r\n\r\n    const handlerefresh = async (id) => {      \r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\", {\r\n            setid:id\r\n        });\r\n        setUpdate(res.data);\r\n    }\r\n    const handleChangePrivate = () => {\r\n        {/*statePrivate*/}\r\n        /*let res = await axios.post(\"http://localhost:3001/edit\", {\r\n            flashcardid:id\r\n       \r\n        });*/\r\n    }\r\n\r\n    const handleselectClick = (item) => {\r\n        setFront(item.front);\r\n        setBack(item.back);\r\n        console.log(item);\r\n        console.log(front);\r\n        console.log(back);\r\n        console.log(update.flashcardarray);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n    }\r\n    const handleSave = async(event) => {\r\n        console.log(\"something\");\r\n    }\r\n    const handleSaveFlashcardStatus = (e) => {\r\n        const updatedflashcardstatus = {\r\n            shared:statePrivate,\r\n            id:update._id\r\n        }\r\n\r\n    }\r\n    const cards = [];\r\n    for (let i = 0; i < Object.values(update.flashcardarray).length; i++) {\r\n        let idnum = i;\r\n        let front = Object.values(update.flashcardarray)[i].front;\r\n        let back = Object.values(update.flashcardarray)[i].back;\r\n        cards.push({id: idnum, front: front, back: back});\r\n    }\r\n    return (\r\n        \r\n        <div style={{display: 'block', backgroundColor: 'darkgray', width: '100%'}}>\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            \r\n            \r\n            \r\n            <FlashcardArray cards={cards} />\r\n\r\n            <div style={{backgroundColor: 'darkgray', width: '100%', height:'70%'}}>\r\n                <Button varient=\"primary\" onClick={handlerefresh(update.flashcardset._id)}>Refresh</Button>\r\n                <Button varient=\"primary\" onClick={handleShow}>+</Button>\r\n                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton id=\"private-button\" variant=\"outline-danger\" value={1} onClick={(e) => setPrivate(e.currentTarget.value)}>\r\n                                Private\r\n                            </ToggleButton>\r\n                            <ToggleButton id=\"public-button\" variant=\"outline-success\" value={0} onClick={(e) => setPrivate(e.currentTarget.value)}>\r\n                                Public\r\n                            </ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Button onClick={(handleChangePrivate)}>Confirm</Button>\r\n                \r\n                <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        <h1 style = {{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style = {{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Add New Flashcards</h2>\r\n                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    {\r\n                        inputList.map((x,i) => {\r\n                            return(\r\n                                <Form>\r\n                                    <Form.Group style={{color: \"gold\"}}>\r\n                                        <h1>#{i+1}</h1>\r\n                                        <Form.Label>Front of Card</Form.Label>\r\n                                        <Form.Control type=\"text\" name = \"front\" placeholder=\"Front of FlashCard\" onChange={e =>handleinputchange(e,i)}/>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <Form.Group style={{color: \"gold\"}}>\r\n                                        <Form.Label>Back of Card</Form.Label>\r\n                                        <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            )\r\n                        })\r\n                    }\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <Button varient=\"primary\" type = \"button\" onClick={handleaddmore}>\r\n                                Add Flashcard\r\n                            </Button>\r\n                        </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n             \r\n            </Modal>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Flashcard</th>\r\n                            <th>Front</th>\r\n                            <th>Back</th>\r\n                            <th>Edit or Delete</th>\r\n                        </tr>\r\n                        {Object.values(update.flashcardarray).map((item, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    \r\n                                    <th>\r\n                                        <Button variant=\"light\" value={item} onClick={(e) => handleselectClick(item)}> #{index+1} </Button>\r\n                                    </th>\r\n                                    <th>{item.front}</th>\r\n                                    <th>{item.back}</th>\r\n                                    <th>\r\n                                        <ButtonGroup aria-label=\"Edit/Delete\">\r\n                                            <Button variant=\"primary\" value={item._id} onClick={(e) => handleeditClick(e.target.value)}> Edit </Button>\r\n                                            <Button variant=\"primary\" value={item._id} onClick={(e) => handledeleteClick(e.target.value, \"flashcard\")}> Delete </Button>\r\n                                        </ButtonGroup>\r\n                                    </th>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </thead>\r\n\r\n                </Table>\r\n            </div>\r\n            <Modal show={showFlashcardDeleteConfirm} onHide={() => handleCloseFlashDelCon()}>\r\n                <Modal.Header closeButton={() => handleCloseFlashDelCon()}>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Are you sure you want to delete {toDeleteFlashcard.front}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleDeleteFlashcard(toDeleteFlashcard)}> Delete </Button>\r\n                    <Button onClick={() => handleCloseFlashDelCon()}> Cancel </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default ViewFlashcard;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\CreateFolder.js",["157","158","159","160"],[],"import React, { useState } from \"react\";\r\nimport \"./CreateFlashCard.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nfunction CreateFolder() {\r\n    const [folderName, setFoldername] = useState();\r\n    const [cookie, setCookie, removeCookie] = useCookies(['userid']);\r\n    const navigate = useNavigate();\r\n    const handleSave = async (event) => {\r\n        event.preventDefault();\r\n        const currentuser = getCookie('userid');\r\n        console.log(getCookie('userid'));\r\n        let res = await axios.post(\"http://localhost:3001/createfolder\", {\r\n            folderName:folderName, \r\n            uid:currentuser,      \r\n        });\r\n\r\n        if(res){\r\n            alert(\"success\");\r\n            \r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:currentuser,\r\n            });\r\n\r\n        }\r\n        console.log(folderName);\r\n        \r\n    }\r\n    return (\r\n        <div className=\"general-box-create\">\r\n            <div style={{textAlign: \"left\", fontSize: \" 1.5rem\"}}>\r\n                    <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            <header style = {{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Folder</header>\r\n            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name of Folder</label>\r\n            <input type=\"text\" name=\"folderName\" onChange={e => setFoldername(e.target.value)} required />\r\n            <Form>\r\n                <Form.Group style={{paddingTop: \"1rem\"}}>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                        Save New Folder\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateFolder;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\EditFlashcard.js",[],[],"C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\MyLibrary.js",["161","162","163"],[],"import React, { useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport { libstorage } from \"./signInPage\";\r\nimport axios from \"axios\";\r\n\r\nfunction MyLibrary() {\r\n    const navigate = useNavigate();\r\n    const handleSeeMore = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate(\"/mylibrary\");\r\n        \r\n    };\r\n\r\n    return (\r\n        \r\n        <div className=\"box\">\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n        <h1 className=\"section-title\">My Library</h1>\r\n        <div style ={{paddingTop: \"0.5rem\"}}>\r\n            <Button variant=\"link\" size= \"sm\" className= \"see-more\" onClick={handleSeeMore}>See All</Button>\r\n        </div>\r\n        <div className= \"library-box\">\r\n            {libstorage.map(item => {\r\n                return (\r\n                    <div>\r\n                        {/*<h1>{item._id}</h1>*/}\r\n                        <button className= \"library-buttons\" value={item._id}>\r\n                            {item.foldername}\r\n                        </button>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MyLibrary;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Folder.js",["164","165","166","167","168","169","170"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport {folder} from './HomeLibrary';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport cookie from 'react-cookies'\r\nexport var flashcards = null;\r\n\r\nvar selectedFlashcardsetToDelete = {\r\n    setname: \"defaultname set\",\r\n};\r\n \r\nfunction Folder() {\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(false);\r\n    const [statePrivate, setPrivate] = useState(false);\r\n    const [TMPName, setTMPName] = useState(\"\");\r\n    const [showSetting, setShowSetting] = useState(false);\r\n    const [cookie, setCookie] = useCookies([]);\r\n    const [inputList, setinputList] = useState([{front:'', back:''}]);\r\n    const [name, setName] = useState();\r\n    const [library, setLibrary] = useState(folder);\r\n  \r\n    const [showFolderDeleteConfirm, setShowFolderDeleteConfirm] = useState(false);\r\n    const [showFlashcardsetDeleteConfirm, setShowFlashcardsetDeleteConfirm] = useState(false);\r\n\r\n    const handleCloseFlashsetDelCon = () => {setShowFlashcardsetDeleteConfirm(false);}\r\n    const handleCloseFolderDeleteConfirm = () => {setShowFolderDeleteConfirm(false);}\r\n    const handleShowFolderDeleteConfirm = () => {setShowFolderDeleteConfirm(true);}\r\n    const handleShowFlashcardsetDeleteConfirm = async (id) => {\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\",{\r\n            flashcardsetid:id,\r\n        });\r\n        selectedFlashcardsetToDelete = res.data;\r\n        setShowFlashcardsetDeleteConfirm(true);\r\n    }\r\n    const handleDeleteFolder = (folder) => {\r\n        console.log(\"nothing yet\")\r\n    }\r\n    const handleDeleteFlashcardset = async (object) => {\r\n        const id = object._id;\r\n        await axios.post(\"http://localhost:3001/deletFlashcardset\",{\r\n            flashcardid:id,\r\n        });\r\n    }\r\n    \r\n    useEffect(()=> {\r\n        setTimeout(() => {\r\n            const getLibrary = async () => {\r\n                let res = await axios.post(\"http://localhost:3001/folder\", {\r\n                    folderid:getCookie('folderid'),\r\n                });\r\n                setLibrary(res.data);\r\n            }\r\n            getLibrary();\r\n        }, 3000);\r\n    },[]);\r\n\r\n    const handleFlashcardClick = async (id) => {\r\n        //prevents page reload\r\n        console.log(id);\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\", {\r\n            setid:id\r\n        });\r\n        flashcards = res.data;\r\n        console.log(flashcards);\r\n        navigate('/flashcard');\r\n    };\r\n\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:''}]);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n    } \r\n    const handleFolderNameChange = (e) => {\r\n        setTMPName(e.target.value);\r\n        console.log(TMPName);\r\n    }\r\n    const handleCreateFlashCardSet = async(event) => {\r\n        event.preventDefault();\r\n\r\n        const flashcardInfo = {\r\n            inputList:inputList,\r\n            name:name\r\n        }\r\n        let res = await axios.post(\"http://localhost:3001/createflashcardset\", {\r\n            inputList:flashcardInfo.inputList,\r\n            name:flashcardInfo.name,\r\n        });\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n        console.log(flashcardInfo);\r\n    }\r\n    const handleSave = async(event) => {\r\n        event.preventDefault();\r\n        console.log(library);\r\n        library.foldername = TMPName;\r\n    \r\n        let res = await axios.post(\"http://localhost:3001/editfolder\", {\r\n            folder:library,\r\n        });\r\n        \r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setinputList([{front:'', back:''}]);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseSetting = () => {\r\n        setShowSetting(false);\r\n        setTMPName(\"\");\r\n        setPrivate(false);\r\n    }\r\n    const handleShowSetting = () => setShowSetting(true);\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Button value={library._id} onClick={() => handleShowFolderDeleteConfirm()}>Delete Folder</Button>\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            \r\n            <div className=\"box\">\r\n\r\n                <heading className=\"section-title\">{library.foldername}</heading>\r\n                <div style ={{textAlign: \"right\", paddingBottom: \"0.5rem\"}}>\r\n                    <Button variant=\"warning\" onClick={handleShow}>\r\n                        Create Flashcard Set\r\n                    </Button>\r\n                    &nbsp;&nbsp;\r\n                    <Button variant=\"warning\" onClick={handleShowSetting}>\r\n                        Folder Settings\r\n                    </Button>\r\n                </div>\r\n                <div className= \"library-box\">\r\n                <table>\r\n                    {Object.values(library.flashcardset).map(item => {\r\n                        return (\r\n                            <row>\r\n                                {/*<h1>{item._id}</h1>*/}\r\n                                <button className= \"library-buttons\" value={item._id} onClick={(e) => handleFlashcardClick(e.target.value)}>\r\n                                    {item.setname}\r\n                                </button>\r\n                                <button className= \"library-buttons\" value={item._id} onClick={(e) => handleShowFlashcardsetDeleteConfirm(e.target.value)}>\r\n                                    Delete {item.setname}\r\n                                </button>\r\n                            \r\n                            </row>\r\n                        );\r\n                    })}\r\n                </table>\r\n                </div>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Flashcard Set</h2>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name Of FlashCard Set</label>\r\n                    <input type=\"text\" name=\"flashcardSetName\" onChange={(e) => setName(e.target.value)} required />\r\n                    {inputList.map((x,i) => { \r\n                        return(\r\n                            <Form>\r\n                                <Form.Group style={{color: \"gold\"}}>\r\n                                    <h1>#{i+1}</h1>\r\n                                    <Form.Label>Front of Card</Form.Label>\r\n                                    <Form.Control type=\"text\" name= \"front\" placeholder=\"Front of FlashCard\" onChange={e => handleinputchange(e,i)}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group style={{color: \"gold\"}}>\r\n                                    <Form.Label>Back of Card</Form.Label>\r\n                                         <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        );\r\n                        })}\r\n                   <div style={{paddingTop: \"1rem\"}}>\r\n                            <Button varient= \"primary\" type=\"button\" onClick={handleaddmore}>\r\n                                Add FlashCard\r\n                            </Button>\r\n                        </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleCreateFlashCardSet}>\r\n                        Create FlashCard Set\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showSetting} onHide={handleCloseSetting} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Folder Settings</h2>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group style={{color: \"gold\"}}>\r\n                            <input onChange={e => handleFolderNameChange(e)}></input>\r\n                        </Form.Group>\r\n                    </Form>                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSetting}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showFolderDeleteConfirm} onHide={() => handleCloseFolderDeleteConfirm()}>\r\n                <Modal.Header closeButton={() => handleCloseFolderDeleteConfirm()}>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Are you sure you want to delete {library.foldername}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleDeleteFolder(library)}> Delete </Button>\r\n                    <Button onClick={() => handleCloseFolderDeleteConfirm()}> Cancel </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={showFlashcardsetDeleteConfirm} onHide={() => handleCloseFlashsetDelCon()}>\r\n                <Modal.Header closeButton={() => handleCloseFlashsetDelCon()}>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Are you sure you want to delete {selectedFlashcardsetToDelete.setName}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleDeleteFlashcardset(selectedFlashcardsetToDelete)}> Delete </Button>\r\n                    <Button onClick={() => handleCloseFlashsetDelCon()}> Cancel </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Folder;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js",[],[],"C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js",["171"],[],"import React, { useRef, useState } from \"react\";\r\nimport \"./CreateFlashCard.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction checkvalidusername(str) {\r\n    const usernameRegex = /^[a-zA-Z0-9]{4,15}$/;\r\n    if (usernameRegex.test(str)) {\r\n        return true;\r\n    } else {\r\n      console.log(\"wrong format of username\");\r\n      return false;\r\n    }\r\n  }\r\nfunction checkvalidpassword(str) {\r\n    const passwordRegex = /^[A-Za-z0-9#?!@$%^&*-]{6,25}$/;\r\n    if (passwordRegex.test(str)) {\r\n      console.log(\"nicepassword!: \" + str);\r\n      return true;\r\n    } else {\r\n      console.log(\"wrong format of password\");\r\n      return false;\r\n    }\r\n  }  \r\nfunction ChangeCredentials() {\r\n    const [oldusername, setOldUsername] = useState();\r\n    const [newusername, setNewUsername] = useState();\r\n    const [oldpassword, setOldPassword] = useState();\r\n    const [newpassword, setNewPassword] = useState();\r\n    const navigate = useNavigate();\r\n    \r\n    const handleSave = async (event) => {\r\n        event.preventDefault();\r\n        const newAccountInfo = {\r\n            oldusername:oldusername,\r\n            newusername:newusername,\r\n            oldpassword:oldpassword,\r\n            newpassword:newpassword\r\n        }\r\n        console.log(newAccountInfo);\r\n        if(checkvalidpassword(newpassword)&&checkvalidusername(newusername)){\r\n            let res = await axios.post(\"http://localhost:3001/changecredential\", {\r\n            oldusername:oldusername,\r\n            newusername:newusername,\r\n            oldpassword:oldpassword,\r\n            newpassword:newpassword\r\n            \r\n        });\r\n        if(res.data ===true){\r\n            alert(\"success\");\r\n            window.location.reload();\r\n        }else{\r\n            alert(\"password does not match\")\r\n        }\r\n        console.log(newAccountInfo);\r\n        }else{\r\n            alert(\"wrong format\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"general-box-create\">\r\n            <div style={{textAlign: \"left\", fontSize: \" 1.5rem\"}}>\r\n                    <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            <Form>\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>Old Username</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"oldusername\" placeholder=\"oldusername\" onChange={e => setOldUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>Old Password</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"oldpassword\" placeholder=\"oldpassword\" onChange={e => setOldPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>New Username</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"newusername\" placeholder=\"newusername\" onChange={e => setNewUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group style={{color: \"gold\"}}>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"newpassword\" placeholder=\"newpassword\" onChange={e => setNewPassword(e.target.value)} />\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <div style={{paddingTop: \"1rem\"}}>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                    Update Credentials\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeCredentials;\r\n","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Achievements.js",["172","173"],[],"import React, { useState } from \"react\";\r\nimport \"./Achievements.css\";\r\n\r\nfunction Achievements() {\r\n\r\n    return (\r\n        <div className=\"box-achievement\">\r\n            <h1 className=\"section-title\">Achievements</h1>\r\n            <div className= \"achievement-box\">\r\n                <button className= \"block-achievement\"><img className= \"img-achievement\" src= {require(\"../images/PurdueTrain.png\")} alt=\"my image\"/></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Achievements;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomeClasses.js",["174"],[],"import React, { useState } from \"react\";\r\nimport \"./HomeClasses.css\";\r\n\r\nfunction HomeClasses() {\r\n\r\n    return (\r\n        <div className=\"box-classes\">\r\n            <h1 className=\"section-title\">My Classes</h1>\r\n            <div className= \"home-boxes\">\r\n                \r\n                <button className= \"block-buttons\"><img className= \"img-class\" src= {require(\"../images/PurdueTrain.png\")} alt=\"folder\"/></button>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeClasses;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\HomeLibrary.js",["175","176","177","178"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport cookie from 'react-cookies'\r\nexport var folder;\r\nfunction HomeLibrary() {\r\n    const navigate = useNavigate();\r\n    const [cookie, setCookie, removeCookie] = useCookies([]);\r\n    const [library, setLibrary] = useState([]);\r\n    \r\n    useEffect(()=> {\r\n        const getLibrary = async () => {\r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:getCookie('userid'),\r\n            });\r\n            setLibrary(res.data);\r\n        }\r\n        getLibrary();\r\n    },[]);\r\n    const handleSeeMore = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate('/mylibrary');\r\n    };\r\n     \r\n    const handleFolderClick = async (id) => {\r\n        //prevents page reload\r\n        setCookie('folderid', id, { path: '/' });\r\n        let res = await axios.post(\"http://localhost:3001/folder\", {\r\n            folderid:getCookie('folderid')\r\n        });\r\n        folder = res.data;\r\n        console.log(res.data);\r\n        navigate('/folder');\r\n    };\r\n    {/*const listOfItems = {libstorage.map((item, index) =>\r\n    <button className= \"library-buttons\" key={index} onClick={handleFolderClick(item._id)}><img className= \"img-library\" src= {require(\"../images/PurdueTrain.png\")} alt=\"lib\"/></button>\r\n    )};*/}\r\n    return (\r\n        <div className=\"box\">\r\n        <h1 className=\"section-title\">My Library</h1>\r\n        <div style ={{paddingTop: \"0.5rem\"}}>\r\n            <Button variant=\"link\" size= \"sm\" className= \"see-more\" onClick={handleSeeMore}>See All</Button>\r\n        </div>\r\n        <div className= \"library-box\">\r\n            <table>\r\n            {Object.values(library).slice(0,8).map(item => {\r\n                return (\r\n                    <row>\r\n                        &nbsp; &nbsp;\r\n                        {/*<h1>{item._id}</h1>*/}\r\n                        <Button variant=\"warning\" className= \"library-buttons\" value={item._id} onClick={(e) => handleFolderClick(e.target.value)}>\r\n                            {item.foldername}\r\n                        </Button>\r\n                        &nbsp; &nbsp;\r\n                    </row>\r\n                );\r\n            })}\r\n            </table>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomeLibrary;","C:\\Users\\benco\\OneDrive\\Documents\\Year 3 Semester 1\\CS 307 - Software Engineering\\Project\\BoilerCards\\BoilerCards\\client\\src\\Components\\Deletepopup.js",["179","180","181","182","183","184","185","186","187","188","189","190","191"],[],"import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nvar dummy = {\r\n    foldername: \"blank folder\",\r\n    setname: \"none set\",\r\n    front: \"blah card\",\r\n};\r\nvar [deleteObject, setDeleteObject] = [dummy, (e)=>{deleteObject = e;}]; //my usestate for object\r\nvar [show, setShow] = [false, (e)=>{show = e;}]; // Modal not shown by default\r\n\r\nvar dummyObjects = new Array();\r\nvar dummyCard = {\r\n    _id : 0,\r\n    front: \"card\",\r\n    back: \"back\",\r\n\r\n};\r\n\r\nvar dummySet = {\r\n    _id: 1,\r\n    setname: \"set\",\r\n};\r\n\r\nvar dummyFolder = {\r\n    _id: 2,\r\n    foldername: \"folder\",\r\n};\r\ndummyObjects[dummyCard._id] = dummyCard;\r\ndummyObjects[dummySet._id] = dummySet;\r\ndummyFolder[dummyFolder._id] = dummyFolder;\r\n\r\n\r\nfunction substituteDatabaseExampleLookup(id, type) {\r\n    var obj = dummyObjects[id];\r\n    obj.type = type;\r\n    return obj;\r\n}\r\n\r\n//from tutorial on Modal\r\nfunction Deletepopup() {\r\nconst [showFolderDeleteConfirm, setShowFolderDeleteConfirm] = useState(false);\r\nconst [showFlashcardsetDeleteConfirm, setShowFlashcardsetDeleteConfirm] = useState(false);\r\nconst [showFlashcardDeleteConfirm, setShowFlashcardDeleteConfirm] = useState(false);\r\n\r\nconst handleCloseFlashsetDelCon = () => {setShowFlashcardsetDeleteConfirm(false);}\r\nconst handleCloseFolDelCon = () => {setShowFolderDeleteConfirm(false);}\r\nconst handleShowFolderDeleteConfirm = () => {setShowFolderDeleteConfirm(true);}\r\nconst handleShowFlashcardsetDeleteConfirm = () => {setShowFlashcardsetDeleteConfirm(true);}\r\nconst handleCloseFlashDelCon = () => {setShowFlashcardDeleteConfirm(false);}\r\nconst handleShowFlashcardDeleteConfirm = () => {setShowFlashcardDeleteConfirm(true);}\r\n\r\n\r\nfunction handleClose() { setShow(false);} //remove Modal \r\n\r\nasync function handleDelete()  {\r\n    console.log();\r\n    deleteByType(deleteObject); //may have problems due to global var\r\n    setShow(false); //close popup upon deletion\r\n}\r\n\r\nreturn(\r\n<div>\r\n\r\n<Modal show={show} onHide={() => handleClose()}>\r\n<Modal.Header closeButton={() => handleClose()}>\r\n    <Modal.Title>Delete Confirmation</Modal.Title>\r\n</Modal.Header>\r\n<Modal.Body> Are you sure you want to delete {getObjectName(deleteObject)}?</Modal.Body>\r\n<Modal.Footer>\r\n    <Button onClick={() => handleDelete()}> Delete </Button>\r\n    <Button onClick={() => handleClose()}> Cancel </Button>\r\n    </Modal.Footer>\r\n</Modal>\r\n\r\n</div>);\r\n}\r\n//invoked on button to show Modal\r\nexport const handleShowDelete = async (toDeleteID, type) => {\r\n    //get object\r\n    var object = substituteDatabaseExampleLookup(toDeleteID, type);\r\n    /* Database operation\r\n    if (type == \"flashcard\") {\r\n        let res =await axios.post(\"http://localhost:3001/flsahcard\",{\r\n            flashcardid:toDeleteID,\r\n        });\r\n        object = res.data;     \r\n    }\r\n    \r\n    if (type == \"flashcardset\") {\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\",{\r\n            flashcardsetid:toDeleteID,\r\n        });\r\n        object = res.data;\r\n    }\r\n\r\n    if (type == \"folder\") {\r\n        let res = await axios.post(\"http://localhost:3001/folder\",{\r\n            folderid:toDeleteID,\r\n        });\r\n        object = res.data;\r\n    }\r\n    */\r\n \r\n\r\n    //update popup\r\n    object.type = type; //set type for other functions\r\n    setDeleteObject(object); //put object \r\n    setShow(true); //Modal pop-up shows\r\n};\r\n\r\n// Works for folder, flashcardset, flashcard\r\nexport function getObjectName(object) {\r\n\r\n\r\n    if (object.front != null) {\r\n        return object.front; // Assume flashcard front approximates a \"name\"\r\n    }\r\n    \r\n    if (object.setname != null) {\r\n        return object.setname;\r\n    } \r\n    \r\n    if (object.foldername != null) {\r\n        return object.foldername;\r\n    }\r\n\r\n    return null;\r\n\r\n}\r\n\r\n//deletes an element from Flashcard database of any type\r\n//add booleans for delete returns\r\nasync function deleteByType(object) {\r\n\r\n    //delete flashcard\r\n    if (object.front != null) {\r\n        const id = object._id;\r\n        await axios.post(\"http://localhost:3001/deletFlashcard\",{\r\n            flashcardid:id,\r\n        });\r\n        return;\r\n    }\r\n\r\n    //delete flashcardset\r\n    if (object.type == \"flashcardset\") {\r\n        const id = object._id;\r\n        await axios.post(\"http://localhost:3001/deletFlashcardset\",{\r\n            flashcardid:id,\r\n        });\r\n        return;\r\n    }\r\n\r\n    //delete folder\r\n    if (object.foldername == \"folder\") {\r\n        const id = object._id;\r\n        /*await axios.post(\"http://localhost:3001/deletFlashcard\",{\r\n            flashcardid:id,\r\n        }); add when service available*/\r\n        return;\r\n    }\r\n}\r\n\r\nexport default Deletepopup;",{"ruleId":"192","severity":1,"message":"193","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":24},{"ruleId":"192","severity":1,"message":"196","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"192","severity":1,"message":"197","line":3,"column":17,"nodeType":"194","messageId":"195","endLine":3,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"199","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":20},{"ruleId":"192","severity":1,"message":"200","line":18,"column":10,"nodeType":"194","messageId":"195","endLine":18,"endColumn":20},{"ruleId":"192","severity":1,"message":"201","line":9,"column":11,"nodeType":"194","messageId":"195","endLine":9,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":16,"column":3,"nodeType":"204","endLine":16,"endColumn":43},{"ruleId":"192","severity":1,"message":"205","line":10,"column":7,"nodeType":"194","messageId":"195","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"206","line":34,"column":12,"nodeType":"194","messageId":"195","endLine":34,"endColumn":25},{"ruleId":"192","severity":1,"message":"207","line":34,"column":27,"nodeType":"194","messageId":"195","endLine":34,"endColumn":43},{"ruleId":"192","severity":1,"message":"208","line":35,"column":12,"nodeType":"194","messageId":"195","endLine":35,"endColumn":23},{"ruleId":"192","severity":1,"message":"209","line":35,"column":25,"nodeType":"194","messageId":"195","endLine":35,"endColumn":39},{"ruleId":"192","severity":1,"message":"210","line":41,"column":11,"nodeType":"194","messageId":"195","endLine":41,"endColumn":23},{"ruleId":"192","severity":1,"message":"197","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"211","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":16},{"ruleId":"192","severity":1,"message":"212","line":19,"column":12,"nodeType":"194","messageId":"195","endLine":19,"endColumn":22},{"ruleId":"192","severity":1,"message":"213","line":19,"column":24,"nodeType":"194","messageId":"195","endLine":19,"endColumn":37},{"ruleId":"192","severity":1,"message":"214","line":24,"column":11,"nodeType":"194","messageId":"195","endLine":24,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":141,"column":45,"nodeType":"204","endLine":141,"endColumn":49},{"ruleId":"192","severity":1,"message":"217","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":14},{"ruleId":"192","severity":1,"message":"205","line":12,"column":7,"nodeType":"194","messageId":"195","endLine":12,"endColumn":13},{"ruleId":"192","severity":1,"message":"206","line":19,"column":12,"nodeType":"194","messageId":"195","endLine":19,"endColumn":25},{"ruleId":"192","severity":1,"message":"207","line":19,"column":27,"nodeType":"194","messageId":"195","endLine":19,"endColumn":43},{"ruleId":"192","severity":1,"message":"208","line":20,"column":12,"nodeType":"194","messageId":"195","endLine":20,"endColumn":23},{"ruleId":"192","severity":1,"message":"209","line":20,"column":25,"nodeType":"194","messageId":"195","endLine":20,"endColumn":39},{"ruleId":"192","severity":1,"message":"218","line":21,"column":12,"nodeType":"194","messageId":"195","endLine":21,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"219","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":12},{"ruleId":"192","severity":1,"message":"220","line":13,"column":12,"nodeType":"194","messageId":"195","endLine":13,"endColumn":19},{"ruleId":"192","severity":1,"message":"221","line":13,"column":21,"nodeType":"194","messageId":"195","endLine":13,"endColumn":30},{"ruleId":"192","severity":1,"message":"222","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":16},{"ruleId":"192","severity":1,"message":"223","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"224","line":26,"column":12,"nodeType":"194","messageId":"195","endLine":26,"endColumn":17},{"ruleId":"192","severity":1,"message":"225","line":57,"column":11,"nodeType":"194","messageId":"195","endLine":57,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":85,"column":9,"nodeType":"228","messageId":"229","endLine":85,"endColumn":27},{"ruleId":"192","severity":1,"message":"230","line":109,"column":11,"nodeType":"194","messageId":"195","endLine":109,"endColumn":36},{"ruleId":"192","severity":1,"message":"231","line":110,"column":15,"nodeType":"194","messageId":"195","endLine":110,"endColumn":37},{"ruleId":"192","severity":1,"message":"218","line":12,"column":12,"nodeType":"194","messageId":"195","endLine":12,"endColumn":18},{"ruleId":"192","severity":1,"message":"221","line":12,"column":20,"nodeType":"194","messageId":"195","endLine":12,"endColumn":29},{"ruleId":"192","severity":1,"message":"232","line":12,"column":31,"nodeType":"194","messageId":"195","endLine":12,"endColumn":43},{"ruleId":"192","severity":1,"message":"233","line":26,"column":17,"nodeType":"194","messageId":"195","endLine":26,"endColumn":20},{"ruleId":"192","severity":1,"message":"197","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"234","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":13},{"ruleId":"192","severity":1,"message":"235","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":19},{"ruleId":"192","severity":1,"message":"236","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":20},{"ruleId":"192","severity":1,"message":"237","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":25},{"ruleId":"192","severity":1,"message":"217","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":14},{"ruleId":"192","severity":1,"message":"238","line":26,"column":12,"nodeType":"194","messageId":"195","endLine":26,"endColumn":24},{"ruleId":"192","severity":1,"message":"218","line":29,"column":12,"nodeType":"194","messageId":"195","endLine":29,"endColumn":18},{"ruleId":"192","severity":1,"message":"221","line":29,"column":20,"nodeType":"194","messageId":"195","endLine":29,"endColumn":29},{"ruleId":"192","severity":1,"message":"239","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":23},{"ruleId":"192","severity":1,"message":"197","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":10,"column":56,"nodeType":"204","endLine":10,"endColumn":150},{"ruleId":"192","severity":1,"message":"197","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"217","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":14},{"ruleId":"192","severity":1,"message":"218","line":12,"column":12,"nodeType":"194","messageId":"195","endLine":12,"endColumn":18},{"ruleId":"192","severity":1,"message":"232","line":12,"column":31,"nodeType":"194","messageId":"195","endLine":12,"endColumn":43},{"ruleId":"226","severity":1,"message":"227","line":40,"column":5,"nodeType":"228","messageId":"229","endLine":42,"endColumn":11},{"ruleId":"242","severity":1,"message":"243","line":14,"column":20,"nodeType":"244","messageId":"245","endLine":14,"endColumn":31},{"ruleId":"192","severity":1,"message":"246","line":44,"column":8,"nodeType":"194","messageId":"195","endLine":44,"endColumn":31},{"ruleId":"192","severity":1,"message":"247","line":45,"column":8,"nodeType":"194","messageId":"195","endLine":45,"endColumn":37},{"ruleId":"192","severity":1,"message":"248","line":46,"column":8,"nodeType":"194","messageId":"195","endLine":46,"endColumn":34},{"ruleId":"192","severity":1,"message":"249","line":48,"column":7,"nodeType":"194","messageId":"195","endLine":48,"endColumn":32},{"ruleId":"192","severity":1,"message":"250","line":49,"column":7,"nodeType":"194","messageId":"195","endLine":49,"endColumn":27},{"ruleId":"192","severity":1,"message":"251","line":50,"column":7,"nodeType":"194","messageId":"195","endLine":50,"endColumn":36},{"ruleId":"192","severity":1,"message":"252","line":51,"column":7,"nodeType":"194","messageId":"195","endLine":51,"endColumn":42},{"ruleId":"192","severity":1,"message":"253","line":52,"column":7,"nodeType":"194","messageId":"195","endLine":52,"endColumn":29},{"ruleId":"192","severity":1,"message":"254","line":53,"column":7,"nodeType":"194","messageId":"195","endLine":53,"endColumn":39},{"ruleId":"255","severity":1,"message":"256","line":148,"column":21,"nodeType":"257","messageId":"258","endLine":148,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":157,"column":27,"nodeType":"257","messageId":"258","endLine":157,"endColumn":29},{"ruleId":"192","severity":1,"message":"259","line":158,"column":15,"nodeType":"194","messageId":"195","endLine":158,"endColumn":17},"no-unused-vars","'RegistrationPage' is defined but never used.","Identifier","unusedVar","'SavedIcon' is defined but never used.","'useState' is defined but never used.","'Header' is defined but never used.","'CreateFolder' is defined but never used.","'useCookies' is defined but never used.","'closeIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'errors' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","'setErrorMessages' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'handleSignUp' is assigned a value but never used.","'Dropdown' is defined but never used.","'destFolder' is assigned a value but never used.","'setDestFolder' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'cookie' is defined but never used.","'cookie' is assigned a value but never used.","'Form' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'Carousel' is defined but never used.","'background' is defined but never used.","'index' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleSaveFlashcardStatus' is assigned a value but never used.","'updatedflashcardstatus' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'res' is assigned a value but never used.","'axios' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'statePrivate' is assigned a value but never used.","'useRef' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'showFolderDeleteConfirm' is assigned a value but never used.","'showFlashcardsetDeleteConfirm' is assigned a value but never used.","'showFlashcardDeleteConfirm' is assigned a value but never used.","'handleCloseFlashsetDelCon' is assigned a value but never used.","'handleCloseFolDelCon' is assigned a value but never used.","'handleShowFolderDeleteConfirm' is assigned a value but never used.","'handleShowFlashcardsetDeleteConfirm' is assigned a value but never used.","'handleCloseFlashDelCon' is assigned a value but never used.","'handleShowFlashcardDeleteConfirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used."]
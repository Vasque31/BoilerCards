[{"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\index.js":"1","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\App.js":"3","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\RegistrationPage.js":"4","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\SavedIcon.js":"5","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Settings.js":"6","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomePage.js":"7","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\signInPage.js":"8","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js":"9","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Header.js":"10","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\EditFlashcard.js":"11","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFolder.js":"12","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js":"13","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\MyLibrary.js":"14","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js":"15","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Folder.js":"16","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Achievements.js":"17","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeClasses.js":"18","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeLibrary.js":"19","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Deletepopup.js":"20"},{"size":820,"mtime":1666578725592,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1666578725593,"results":"23","hashOfConfig":"22"},{"size":1758,"mtime":1666908564420,"results":"24","hashOfConfig":"22"},{"size":3174,"mtime":1666578725580,"results":"25","hashOfConfig":"22"},{"size":1417,"mtime":1667340564423,"results":"26","hashOfConfig":"22"},{"size":1676,"mtime":1666907276319,"results":"27","hashOfConfig":"22"},{"size":624,"mtime":1667340564421,"results":"28","hashOfConfig":"22"},{"size":3380,"mtime":1667353394280,"results":"29","hashOfConfig":"22"},{"size":14453,"mtime":1667364095874,"results":"30","hashOfConfig":"22"},{"size":13864,"mtime":1667357080558,"results":"31","hashOfConfig":"22"},{"size":2193,"mtime":1666578725575,"results":"32","hashOfConfig":"22"},{"size":2061,"mtime":1666915967014,"results":"33","hashOfConfig":"22"},{"size":4596,"mtime":1667353367652,"results":"34","hashOfConfig":"22"},{"size":2388,"mtime":1667340564422,"results":"35","hashOfConfig":"22"},{"size":3913,"mtime":1667187609924,"results":"36","hashOfConfig":"22"},{"size":18062,"mtime":1667364099200,"results":"37","hashOfConfig":"22"},{"size":506,"mtime":1666578725573,"results":"38","hashOfConfig":"22"},{"size":516,"mtime":1666578725577,"results":"39","hashOfConfig":"22"},{"size":2623,"mtime":1667357042384,"results":"40","hashOfConfig":"22"},{"size":4720,"mtime":1667187609926,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vk9hi7",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\index.js",["106","107"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\App.js",["108","109","110","111"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\RegistrationPage.js",["112","113","114","115","116","117"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\SavedIcon.js",["118","119"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Settings.js",["120","121","122","123"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomePage.js",["124","125","126","127"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\signInPage.js",["128","129","130","131","132","133","134"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ViewFlashcard.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Header.js",["153","154","155","156","157","158","159","160","161","162"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport \"./Header.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\"; \r\nimport {folder} from \"./HomeLibrary\";\r\nimport {libstorage} from \"./signInPage.js\";\r\n\r\nfunction Header() {\r\n    const [show, setShow] = useState(false);\r\n    const [destFolder, setDestFolder] = useState(\"\");\r\n    const [showFolder, setShowFolder] = useState(false);\r\n    const [inputList, setinputList] = useState([{front:'', back:'', drate:''}]);\r\n    const [folderName, setFoldername] = useState();\r\n    const [statePrivate, setPrivate] = useState(true);\r\n    const [name, setName] = useState();\r\n    const navigate = useNavigate();\r\n    const [library, setLibrary] = useState([]);\r\n    useEffect(()=> {\r\n        const getLibrary = async () => {\r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:getCookie('userid'),\r\n            });\r\n            console.log(res.data);\r\n            setLibrary(res.data);\r\n        }\r\n        getLibrary();\r\n    },[]);\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:'', drate:''}]);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value,rate} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n        console.log(inputList);\r\n    } \r\n    const handleSave = async(event) => {\r\n        event.preventDefault();\r\n        const flashcardInfo = {\r\n            inputList:inputList,\r\n            name:name,\r\n            statePrivate:statePrivate,\r\n            folderid:destFolder,\r\n        }\r\n        console.log(flashcardInfo);\r\n        let res = await axios.post(\"http://localhost:3001/createflashcardset\", {\r\n            inputList:flashcardInfo.inputList,\r\n            name:flashcardInfo.name,\r\n            public:flashcardInfo.statePrivate,\r\n            folderid:flashcardInfo.folderid,\r\n        });\r\n\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleClose();\r\n        \r\n        console.log(flashcardInfo);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setinputList([{front:'', back:''}]);\r\n    }\r\n    const handleShow = async() => {\r\n        let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n            uid:getCookie('userid'),\r\n        });\r\n        setLibrary(res.data);\r\n        setShow(true);\r\n    }\r\n    const handleShowFolder = () => setShowFolder(true);\r\n    const handleCloseFolder = () => {\r\n        setShowFolder(false);\r\n \r\n    }\r\n    const handleSaveFolder = async(event) => {\r\n        let res = await axios.post(\"http://localhost:3001/createfolder\",{\r\n            folderName:folderName,\r\n            uid:getCookie('userid'),    \r\n        });\r\n\r\n        if(res.data===true){\r\n            alert(\"success\");\r\n        }\r\n        handleCloseFolder();\r\n        window.location.reload(false);\r\n    } \r\n    return (\r\n        <div className=\"app\">\r\n            <Navbar variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand>BoilerCards</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link>\r\n                            <Link to=\"/HomePage\">\r\n                                <Button variant=\"Light\">\r\n                                    Home\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <Form className=\"d-flex\">\r\n                            <Form.Control\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"me-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"dark\">Search</Button>\r\n                        </Form>\r\n                        <NavDropdown title=\"Create\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">\r\n                                Class\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item>\r\n                                <Button variant=\"Light\" onClick={handleShowFolder}>\r\n                                    Folder\r\n                                </Button>\r\n                                <div>\r\n                                <Modal show={showFolder} onHide={handleCloseFolder} backdrop=\"static\" dialogClassName=\"general-box-createfolder\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>\r\n                                            <h1 style ={{fontSize: \"3rem\", color:\"gold\", textAlign:\"center\"}}>BOILERCARDS</h1>\r\n                                            <h2 style ={{fontSize: \"1rem\", color:\"gold\", textAlign:\"center\"}}>Create Folder</h2>\r\n                                        </Modal.Title>\r\n                                        \r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name of New Folder: </label>\r\n                                            <input type=\"text\" name = \"folderName\" onChange={(e) => setFoldername(e.target.value)} required />\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" onClick={handleSaveFolder}>\r\n                                                Save New Folder\r\n                                            </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                                </div>\r\n                            </NavDropdown.Item>\r\n                            \r\n                            <NavDropdown.Item>\r\n                                    <Button variant=\"Light\" onClick={handleShow}>\r\n                                        Flashcard Set\r\n                                    </Button>\r\n                                    <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>\r\n                                            <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                                            <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Flashcard Set</h2>\r\n                                            </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            <label>Destination Folder</label>&nbsp; &nbsp;\r\n                                            <select name=\"selectList\" id=\"selectList\" onChange={(e) => setDestFolder(e.currentTarget.value)}>\r\n                                                <option value=\"\">---Choose---</option>\r\n                                                {Object.values(library).map(item => {\r\n                                                    return (\r\n                                                        <option value={item._id}>{item.foldername}</option>    \r\n                                                    );\r\n                                                })}\r\n                                            </select>\r\n                                            <h1></h1>\r\n                                            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name Of FlashCard Set</label>\r\n                                            <input type=\"text\" name=\"flashcardSetName\" onChange={(e) => setName(e.target.value)} required />\r\n                                            <h1></h1>\r\n                                                <label>Private/Public</label>\r\n                                                <select name=\"pripub\" id=\"privlist\" onChange={(e) => setPrivate(e.currentTarget.value)}>\r\n                                                    <option value={true}>\r\n                                                        Private\r\n                                                    </option>\r\n                                                    <option value={false}>\r\n                                                        Public\r\n                                                    </option>\r\n                                                </select>\r\n                                            {\r\n                                            inputList.map((x,i) => { \r\n                                                return(\r\n                                                <Form>\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <h1>#{i+1}</h1>\r\n                                                        <Form.Label>Front of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"front\" placeholder=\"Front of FlashCard\" onChange={e => handleinputchange(e,i)}/>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <Form.Label>Back of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <Form.Label>Difficulty Rating</Form.Label>\r\n                                                        <select name =\"drate\" id=\"Difficulty-Rating\" onChange={(e) => handleinputchange(e,i)}>\r\n                                                            <option value={1}>1</option>\r\n                                                            <option value={2}>2</option>\r\n                                                            <option value={3}>3</option>\r\n                                                            <option value={4}>4</option>\r\n                                                            <option value={5}>5</option>\r\n                                                        </select>\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                                );\r\n                                            })}\r\n                                            <div style={{paddingTop: \"1rem\"}}>\r\n                                                <Button varient= \"primary\" type=\"button\" onClick={handleaddmore}>\r\n                                                    Add FlashCard\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" onClick={handleSave}>\r\n                                                Save Changes\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                            </NavDropdown.Item> \r\n                        </NavDropdown>\r\n                        \r\n                        <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">\r\n                                Account Data\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item>\r\n                                <Link to=\"/settings\">\r\n                                    <Button variant=\"Light\">\r\n                                        Settings\r\n                                    </Button>\r\n                                </Link>\r\n                            </NavDropdown.Item> \r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    </Navbar.Collapse>  \r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n",[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\EditFlashcard.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFolder.js",["163","164","165","166"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\ChangeCredentials.js",["167","168"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\MyLibrary.js",["169","170","171","172","173","174"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\CreateFlashCard.js",[],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Folder.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport CloseButton from \"react-bootstrap/esm/CloseButton\";\r\nimport { UNSAFE_enhanceManualRouteObjects, useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport {folder} from './HomeLibrary';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport saveicon from \"../images/saveicon.png\";\r\n\r\nimport cookie from 'react-cookies'\r\nexport var flashcards = null;\r\n\r\n//var to update modal display, initialized with dummy values to prevent null crash\r\nvar selectedFlashcardsetToDelete = {\r\n    setname: \"defaultname set\",\r\n};\r\nvar selectedFlashcardsetToCopy = {\r\n    setname: \"defaultname set\",\r\n}; \r\nvar currentUser = {\r\n    folder: new Map(), \r\n};\r\n\r\nfunction Folder() {\r\n    const navigate = useNavigate();\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const [statePrivate, setPrivate] = useState(true);\r\n    const [TMPName, setTMPName] = useState(\"\");\r\n    const [showSetting, setShowSetting] = useState(false);\r\n    const [cookie, setCookie] = useCookies([]);\r\n    const [inputList, setinputList] = useState([{front:'', back:''}]);\r\n    const [name, setName] = useState();\r\n    const [library, setLibrary] = useState(folder);\r\n    const [destFolder, setDestFolder] = useState(\"\");\r\n    const [showFolderDeleteConfirm, setShowFolderDeleteConfirm] = useState(false);\r\n    const [showFlashcardsetDeleteConfirm, setShowFlashcardsetDeleteConfirm] = useState(false);\r\n    const [showFlashcardsetCopy, setShowFlashcardsetCopy] = useState(false);\r\n    const [showSaved, setShowSaved] = useState(false);\r\n    const [selectall, setSelectAll] = useState(false);\r\n    const handleShowSaved = () => { setShowSaved(true);}\r\n    const handleCloseSaved = () => { setShowSaved(false);}\r\n    const handleCloseFlashsetDelCon = () => {setShowFlashcardsetDeleteConfirm(false);}\r\n    const handleCloseFolderDeleteConfirm = () => {setShowFolderDeleteConfirm(false);}\r\n    const handleShowFolderDeleteConfirm = () => {setShowFolderDeleteConfirm(true);}\r\n    const [checkedState, setCheckedState] = useState([])\r\n    const handleGroup = (id) => {\r\n\r\n    };\r\n\r\n    const handleShowFlashcardsetDeleteConfirm = async (id) => {\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\",{\r\n            setid:id,\r\n        });\r\n        selectedFlashcardsetToDelete = res.data;\r\n        console.log();\r\n        selectedFlashcardsetToDelete.setname = selectedFlashcardsetToDelete.flashcardset.setname;\r\n        setShowFlashcardsetDeleteConfirm(true);\r\n    }\r\n    const handleShowFlashcardsetCopy = async (id) =>{\r\n        /*let res = await axios.post(\"http://localhost:3001/currentuser\",{\r\n        });\r\n        currentUser = res.data;*/\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\",{\r\n            setid:id,\r\n        });\r\n        selectedFlashcardsetToCopy = res.data; //not flashcardset object, but folderinfo object\r\n        selectedFlashcardsetToCopy.setname = selectedFlashcardsetToCopy.flashcardset.setname;\r\n        setShowFlashcardsetCopy(true);\r\n    }\r\n\r\n    const handleCloseFlashsetCopy = () => {\r\n        setShowFlashcardsetCopy(false);\r\n    }\r\n    const handleCopyFlashcardset = async (folderid) => {\r\n\r\n\r\n    }\r\n\r\n    {/* Delete Handlers Folder/FlashcardSets */}\r\n\r\n    const handleDeleteFolder = async(object) => {\r\n        let res = await axios.post(\"http://localhost:3001/deletefolder\",{\r\n            folder:library,\r\n        });\r\n        if (res.data == true) {\r\n            handleShowSaved();\r\n            navigate(\"/HomePage\"); //folder deleted, leave it\r\n        }\r\n        \r\n    }\r\n    const handlerefresh = async () => {     \r\n        console.log(library._id);\r\n        let res = await axios.post(\"http://localhost:3001/folder\", {\r\n            folderid:library._id\r\n        });\r\n        console.log(res.data);\r\n        setLibrary(res.data);\r\n    }\r\n    const handleDeleteFlashcardset = async (object) => {\r\n        const setinfo = object;\r\n        setinfo.setid = object._id;\r\n        let res = await axios.post(\"http://localhost:3001/deleteset\",{\r\n            setid: object._id,\r\n        });\r\n        if (res.data == true) {\r\n            handleCloseFlashsetDelCon(); //remove confirmation upon success\r\n            handleShowSaved();\r\n        }\r\n        handlerefresh();\r\n    }\r\n\r\n    {/* Click Flashcard Handler */}\r\n\r\n    const handleFlashcardClick = async (id) => {\r\n        //prevents page reload\r\n        console.log(id);\r\n        let res = await axios.post(\"http://localhost:3001/flsahcardset\", {\r\n            setid:id\r\n        });\r\n        flashcards = res.data;\r\n        console.log(flashcards);\r\n        navigate('/flashcard');\r\n    };\r\n\r\n    {/* Create Flashcard Modal Handlers */}\r\n\r\n    const handleaddmore = () => {\r\n        setinputList([...inputList, {front:'', back:''}]);\r\n    }\r\n    const handleinputchange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name]=value;\r\n        setinputList(list);\r\n    } \r\n    const handleCreateFlashCardSet = async(event) => {\r\n        event.preventDefault();\r\n\r\n        const flashcardInfo = {\r\n            inputList:inputList,\r\n            name:name,\r\n            statePrivate:statePrivate,\r\n            folderid:folder._id,\r\n        }\r\n        console.log(flashcardInfo);\r\n        let res = await axios.post(\"http://localhost:3001/createflashcardset\", {\r\n            inputList:flashcardInfo.inputList,\r\n            name:flashcardInfo.name,\r\n            public:flashcardInfo.statePrivate,\r\n            folderid:flashcardInfo.folderid,\r\n        });\r\n\r\n        if(res.data===true){\r\n            handleShowSaved();\r\n        }\r\n        handleClose();\r\n        handlerefresh();\r\n        console.log(flashcardInfo);\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setinputList([{front:'', back:''}]);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    {/* Edit Folder Name Modal Handlers */}\r\n\r\n    const handleSave = async(event) => {\r\n        event.preventDefault();\r\n        console.log(library);\r\n        library.foldername = TMPName;\r\n    \r\n        let res = await axios.post(\"http://localhost:3001/editfolder\", {\r\n            folder:library,\r\n        });\r\n        \r\n        if(res.data===true){\r\n            handleShowSaved();\r\n        }\r\n        handlerefresh();\r\n        handleCloseSetting();\r\n    }\r\n    const handleFolderNameChange = (e) => {\r\n        setTMPName(e.target.value);\r\n        handlerefresh();\r\n        console.log(TMPName);\r\n    }\r\n    const handleCloseSetting = () => {\r\n        setShowSetting(false);\r\n        setTMPName(\"\");\r\n    }\r\n    const handleShowSetting = () => setShowSetting(true);\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div style={{paddingTop: \"1rem\", paddingLeft: \"9rem\", fontSize: \" 2rem\"}}>\r\n                <CloseButton variant= \"white\" onClick={() => navigate(-1)}/>\r\n            </div>\r\n            \r\n            <div className=\"box\">\r\n\r\n                <heading className=\"section-title\">{library.foldername}</heading>\r\n                <div style ={{textAlign: \"right\", paddingBottom: \"0.5rem\"}}>\r\n                &nbsp;&nbsp;\r\n                    <Button variant=\"warning\" onClick={() => setSelectAll(!selectall)}>\r\n                        Select All\r\n                    </Button>\r\n                    <Button variant=\"warning\" onClick={handleShow}>\r\n                        Create Flashcard Set\r\n                    </Button>\r\n                    &nbsp;&nbsp;\r\n                    <Button variant=\"warning\" onClick={handleShowSetting}>\r\n                        Folder Settings\r\n                    </Button>\r\n                    &nbsp;&nbsp;\r\n                    <Button variant='danger' value={library._id} onClick={() => handleShowFolderDeleteConfirm()}>Delete Folder</Button>\r\n                </div>\r\n                <div className= \"library-box\">\r\n                <table>\r\n                    {Object.values(library.flashcardset).map(item => {\r\n                        return (\r\n                            <row>\r\n                                {/*<h1>{item._id}</h1>*/}\r\n                                &nbsp; &nbsp;\r\n                                {selectall && <input type=\"checkbox\" />}\r\n                                <Button variant='warning' className= \"library-buttons\" value={item._id} onClick={(e) => handleFlashcardClick(e.target.value)}>\r\n                                    {item.setname}\r\n                                </Button>\r\n                                &nbsp; &nbsp;\r\n                                <Button variant='danger' size='sm' className= \"library-buttons\" value={item._id} onClick={(e) => handleShowFlashcardsetDeleteConfirm(e.target.value)}>\r\n                                    x\r\n                                </Button>\r\n                                <Button size='sm'className= \"library-buttons\" value={item._id} onClick={(e) => handleShowFlashcardsetCopy(e.target.value)}>\r\n                                    Copy\r\n                                </Button>\r\n                                &nbsp; &nbsp;\r\n                            </row>\r\n                            \r\n                        );\r\n                    })}\r\n                </table>\r\n                </div>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose} dialogClassName=\"general-box-createflash\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>\r\n                                            <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                                            <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Create Flashcard Set</h2>\r\n                                            </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            <h1></h1>\r\n                                            <label style = {{paddingRight: \"1rem\", color: \"gold\", fontSize: \"1rem\"}}>Name Of FlashCard Set</label>\r\n                                            <input type=\"text\" name=\"flashcardSetName\" onChange={(e) => setName(e.target.value)} required />\r\n                                            <h1></h1>\r\n                                                <label>Private/Public</label>\r\n                                                <select name=\"pripub\" id=\"privlist\" onChange={(e) => setPrivate(e.currentTarget.value)}>\r\n                                                    <option value={true}>\r\n                                                        Private\r\n                                                    </option>\r\n                                                    <option value={false}>\r\n                                                        Public\r\n                                                    </option>\r\n                                                </select>\r\n                                            {\r\n                                            inputList.map((x,i) => { \r\n                                                return(\r\n                                                <Form>\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <h1>#{i+1}</h1>\r\n                                                        <Form.Label>Front of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"front\" placeholder=\"Front of FlashCard\" onChange={e => handleinputchange(e,i)}/>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group style={{color: \"gold\"}}>\r\n                                                        <Form.Label>Back of Card</Form.Label>\r\n                                                        <Form.Control type=\"text\" name= \"back\" placeholder=\"Back of FlashCard\" onChange={e => handleinputchange(e,i)} />\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                                );\r\n                                            })}\r\n                                            <div style={{paddingTop: \"1rem\"}}>\r\n                                                <Button varient= \"primary\" type=\"button\" onClick={handleaddmore}>\r\n                                                    Add FlashCard\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" onClick={handleCreateFlashCardSet}>\r\n                                                Save Changes\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n            <Modal show={showSetting} onHide={handleCloseSetting} dialogClassName=\"general-box-createflash\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h1 style ={{fontSize: \"5rem\", color:\"gold\", textAlign: \"center\"}}>BOILERCARDS</h1>\r\n                        <h2 style ={{fontSize: \"2rem\", color:\"gold\", textAlign: \"center\"}}>Folder Settings</h2>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group style={{color: \"gold\"}}>\r\n                            <input onChange={e => handleFolderNameChange(e)}></input>\r\n                        </Form.Group>\r\n                    </Form>                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSetting}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showFolderDeleteConfirm} onHide={() => handleCloseFolderDeleteConfirm()}>\r\n                <Modal.Header closeButton={() => handleCloseFolderDeleteConfirm()}>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Are you sure you want to delete {library.foldername}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleDeleteFolder(library)}> Delete </Button>\r\n                    <Button onClick={() => handleCloseFolderDeleteConfirm()}> Cancel </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={showFlashcardsetDeleteConfirm} onHide={() => handleCloseFlashsetDelCon()}>\r\n                <Modal.Header closeButton={() => handleCloseFlashsetDelCon()}>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Are you sure you want to delete {selectedFlashcardsetToDelete.setname}?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleDeleteFlashcardset(selectedFlashcardsetToDelete.flashcardset)}> Delete </Button>\r\n                    <Button onClick={() => handleCloseFlashsetDelCon()}> Cancel </Button>\r\n                </Modal.Footer>\r\n            </Modal>    \r\n            <Modal show={showFlashcardsetCopy} onHide={() => handleCloseFlashsetCopy()}>\r\n                <Modal.Header closeButton={() => handleCloseFlashsetCopy()}>\r\n                    <Modal.Title>Copy {selectedFlashcardsetToCopy.setname}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> Select where to copy {selectedFlashcardsetToCopy.setname}:\r\n                        {Object.values(currentUser.folder).map(item => {\r\n                            return (\r\n                                <div>\r\n                                    <row>\r\n                                        <label> {item.foldername} </label>\r\n                                        <Button value={item._id} onClick={(e) => handleCopyFlashcardset(e.target.value)}> Copyto </Button>\r\n                                    </row>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleCloseFlashsetCopy()}> Cancel </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showSaved} onHide={() => handleCloseSaved()}>\r\n                <Modal.Header closeButton={() => handleCloseSaved()}>\r\n                    <Modal.Title> Successful Operation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> \r\n                        <img className=\"photo\" src= {saveicon}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => handleCloseSaved()}> Acknowledge </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Folder;\r\n","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Achievements.js",["198","199"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeClasses.js",["200"],[],"C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\HomeLibrary.js",["201","202","203","204","205"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomeLibrary.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\nimport { getCookie } from 'react-use-cookie';\r\nimport cookie from 'react-cookies'\r\nexport var folder;\r\nfunction HomeLibrary() {\r\n    const navigate = useNavigate();\r\n    const [cookie, setCookie, removeCookie] = useCookies([]);\r\n    const [library, setLibrary] = useState([]);\r\n    \r\n    useEffect(()=> {\r\n        const getLibrary = async () => {\r\n            let res = await axios.post(\"http://localhost:3001/loadspace\", {\r\n                uid:getCookie('userid'),\r\n            });\r\n            console.log(res.data);\r\n            setLibrary(res.data);\r\n            folder = library;\r\n        }\r\n        getLibrary();\r\n    },[]);\r\n\r\n    const handleSeeMore = (event) => {\r\n        //prevents page reload\r\n        event.preventDefault();\r\n        navigate('/mylibrary');\r\n    };\r\n     \r\n    const handleFolderClick = async (id) => {\r\n        //prevents page reload\r\n        setCookie('folderid', id, { path: '/' });\r\n        let res = await axios.post(\"http://localhost:3001/folder\", {\r\n            folderid:getCookie('folderid')\r\n        });\r\n        folder = res.data;\r\n        console.log(res.data);\r\n        navigate('/folder');\r\n    };\r\n    {/*const listOfItems = {libstorage.map((item, index) =>\r\n    <button className= \"library-buttons\" key={index} onClick={handleFolderClick(item._id)}><img className= \"img-library\" src= {require(\"../images/PurdueTrain.png\")} alt=\"lib\"/></button>\r\n    )};*/}\r\n    return (\r\n        <div className=\"box\">\r\n        <h1 className=\"section-title\">My Library</h1>\r\n        <div style ={{paddingTop: \"0.5rem\"}}>\r\n            <Button variant=\"link\" size= \"sm\" className= \"see-more\" onClick={(e) => handleSeeMore}>See All</Button>\r\n        </div>\r\n        <div className= \"library-box\">\r\n            <table>\r\n            {Object.values(library).slice(0,20).map(item => {\r\n                return (\r\n                    <row>\r\n                        &nbsp; &nbsp;\r\n                        {/*<h1>{item._id}</h1>*/}\r\n                        <Button variant=\"warning\" className= \"library-buttons\" value={item._id} onClick={(e) => handleFolderClick(e.target.value)}>\r\n                            {item.foldername}\r\n                        </Button>\r\n                        &nbsp; &nbsp;\r\n                    </row>\r\n                );\r\n            })}\r\n            </table>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomeLibrary;","C:\\Users\\bxjia\\sprint2\\BoilerCards\\client\\src\\Components\\Deletepopup.js",["206","207","208","209","210","211","212","213","214","215","216","217","218"],[],{"ruleId":"219","severity":1,"message":"220","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":24},{"ruleId":"219","severity":1,"message":"223","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":17},{"ruleId":"219","severity":1,"message":"224","line":3,"column":17,"nodeType":"221","messageId":"222","endLine":3,"endColumn":25},{"ruleId":"219","severity":1,"message":"225","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":14},{"ruleId":"219","severity":1,"message":"226","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":20},{"ruleId":"219","severity":1,"message":"227","line":18,"column":10,"nodeType":"221","messageId":"222","endLine":18,"endColumn":20},{"ruleId":"219","severity":1,"message":"228","line":10,"column":7,"nodeType":"221","messageId":"222","endLine":10,"endColumn":13},{"ruleId":"219","severity":1,"message":"229","line":34,"column":12,"nodeType":"221","messageId":"222","endLine":34,"endColumn":25},{"ruleId":"219","severity":1,"message":"230","line":34,"column":27,"nodeType":"221","messageId":"222","endLine":34,"endColumn":43},{"ruleId":"219","severity":1,"message":"231","line":35,"column":12,"nodeType":"221","messageId":"222","endLine":35,"endColumn":23},{"ruleId":"219","severity":1,"message":"232","line":35,"column":25,"nodeType":"221","messageId":"222","endLine":35,"endColumn":39},{"ruleId":"219","severity":1,"message":"233","line":41,"column":11,"nodeType":"221","messageId":"222","endLine":41,"endColumn":23},{"ruleId":"219","severity":1,"message":"234","line":9,"column":11,"nodeType":"221","messageId":"222","endLine":9,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":16,"column":3,"nodeType":"237","endLine":16,"endColumn":43},{"ruleId":"219","severity":1,"message":"224","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"238","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"219","severity":1,"message":"239","line":13,"column":12,"nodeType":"221","messageId":"222","endLine":13,"endColumn":19},{"ruleId":"219","severity":1,"message":"240","line":13,"column":21,"nodeType":"221","messageId":"222","endLine":13,"endColumn":30},{"ruleId":"219","severity":1,"message":"224","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"241","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"242","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":19},{"ruleId":"219","severity":1,"message":"243","line":8,"column":10,"nodeType":"221","messageId":"222","endLine":8,"endColumn":26},{"ruleId":"219","severity":1,"message":"244","line":10,"column":8,"nodeType":"221","messageId":"222","endLine":10,"endColumn":14},{"ruleId":"219","severity":1,"message":"228","line":12,"column":7,"nodeType":"221","messageId":"222","endLine":12,"endColumn":13},{"ruleId":"219","severity":1,"message":"229","line":19,"column":12,"nodeType":"221","messageId":"222","endLine":19,"endColumn":25},{"ruleId":"219","severity":1,"message":"230","line":19,"column":27,"nodeType":"221","messageId":"222","endLine":19,"endColumn":43},{"ruleId":"219","severity":1,"message":"231","line":20,"column":12,"nodeType":"221","messageId":"222","endLine":20,"endColumn":23},{"ruleId":"219","severity":1,"message":"232","line":20,"column":25,"nodeType":"221","messageId":"222","endLine":20,"endColumn":39},{"ruleId":"219","severity":1,"message":"245","line":21,"column":12,"nodeType":"221","messageId":"222","endLine":21,"endColumn":18},{"ruleId":"219","severity":1,"message":"246","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},{"ruleId":"219","severity":1,"message":"247","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":18},{"ruleId":"219","severity":1,"message":"248","line":29,"column":12,"nodeType":"221","messageId":"222","endLine":29,"endColumn":17},{"ruleId":"219","severity":1,"message":"249","line":30,"column":12,"nodeType":"221","messageId":"222","endLine":30,"endColumn":17},{"ruleId":"219","severity":1,"message":"250","line":31,"column":12,"nodeType":"221","messageId":"222","endLine":31,"endColumn":16},{"ruleId":"219","severity":1,"message":"251","line":41,"column":11,"nodeType":"221","messageId":"222","endLine":41,"endColumn":43},{"ruleId":"252","severity":1,"message":"253","line":53,"column":22,"nodeType":"254","messageId":"255","endLine":53,"endColumn":24},{"ruleId":"219","severity":1,"message":"256","line":69,"column":11,"nodeType":"221","messageId":"222","endLine":69,"endColumn":23},{"ruleId":"219","severity":1,"message":"257","line":96,"column":13,"nodeType":"221","messageId":"222","endLine":96,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":111,"column":9,"nodeType":"260","messageId":"261","endLine":111,"endColumn":27},{"ruleId":"219","severity":1,"message":"257","line":131,"column":13,"nodeType":"221","messageId":"222","endLine":131,"endColumn":16},{"ruleId":"219","severity":1,"message":"262","line":138,"column":11,"nodeType":"221","messageId":"222","endLine":138,"endColumn":36},{"ruleId":"219","severity":1,"message":"263","line":139,"column":15,"nodeType":"221","messageId":"222","endLine":139,"endColumn":37},{"ruleId":"219","severity":1,"message":"264","line":147,"column":11,"nodeType":"221","messageId":"222","endLine":147,"endColumn":22},{"ruleId":"265","severity":1,"message":"266","line":148,"column":9,"nodeType":"221","messageId":"267","endLine":148,"endColumn":14},{"ruleId":"219","severity":1,"message":"268","line":162,"column":11,"nodeType":"221","messageId":"222","endLine":162,"endColumn":25},{"ruleId":"219","severity":1,"message":"269","line":172,"column":15,"nodeType":"221","messageId":"222","endLine":172,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":317,"column":25,"nodeType":"237","endLine":317,"endColumn":65},{"ruleId":"219","severity":1,"message":"270","line":14,"column":8,"nodeType":"221","messageId":"222","endLine":14,"endColumn":16},{"ruleId":"219","severity":1,"message":"271","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":22},{"ruleId":"219","severity":1,"message":"272","line":16,"column":8,"nodeType":"221","messageId":"222","endLine":16,"endColumn":20},{"ruleId":"219","severity":1,"message":"273","line":17,"column":8,"nodeType":"221","messageId":"222","endLine":17,"endColumn":25},{"ruleId":"219","severity":1,"message":"274","line":18,"column":9,"nodeType":"221","messageId":"222","endLine":18,"endColumn":15},{"ruleId":"219","severity":1,"message":"275","line":19,"column":9,"nodeType":"221","messageId":"222","endLine":19,"endColumn":19},{"ruleId":"219","severity":1,"message":"276","line":29,"column":11,"nodeType":"221","messageId":"222","endLine":29,"endColumn":19},{"ruleId":"219","severity":1,"message":"277","line":45,"column":28,"nodeType":"221","messageId":"222","endLine":45,"endColumn":32},{"ruleId":"278","severity":1,"message":"279","line":181,"column":45,"nodeType":"237","endLine":181,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":184,"column":45,"nodeType":"237","endLine":184,"endColumn":49},{"ruleId":"219","severity":1,"message":"245","line":12,"column":12,"nodeType":"221","messageId":"222","endLine":12,"endColumn":18},{"ruleId":"219","severity":1,"message":"240","line":12,"column":20,"nodeType":"221","messageId":"222","endLine":12,"endColumn":29},{"ruleId":"219","severity":1,"message":"280","line":12,"column":31,"nodeType":"221","messageId":"222","endLine":12,"endColumn":43},{"ruleId":"219","severity":1,"message":"257","line":26,"column":17,"nodeType":"221","messageId":"222","endLine":26,"endColumn":20},{"ruleId":"219","severity":1,"message":"281","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":106,"column":25,"nodeType":"237","endLine":106,"endColumn":65},{"ruleId":"219","severity":1,"message":"275","line":7,"column":10,"nodeType":"221","messageId":"222","endLine":7,"endColumn":20},{"ruleId":"219","severity":1,"message":"244","line":10,"column":8,"nodeType":"221","messageId":"222","endLine":10,"endColumn":14},{"ruleId":"219","severity":1,"message":"245","line":16,"column":12,"nodeType":"221","messageId":"222","endLine":16,"endColumn":18},{"ruleId":"219","severity":1,"message":"280","line":16,"column":31,"nodeType":"221","messageId":"222","endLine":16,"endColumn":43},{"ruleId":"219","severity":1,"message":"282","line":27,"column":11,"nodeType":"221","messageId":"222","endLine":27,"endColumn":24},{"ruleId":"219","severity":1,"message":"283","line":33,"column":11,"nodeType":"221","messageId":"222","endLine":33,"endColumn":28},{"ruleId":"219","severity":1,"message":"284","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"285","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":42},{"ruleId":"219","severity":1,"message":"286","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":19},{"ruleId":"219","severity":1,"message":"272","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":20},{"ruleId":"219","severity":1,"message":"273","line":13,"column":8,"nodeType":"221","messageId":"222","endLine":13,"endColumn":25},{"ruleId":"219","severity":1,"message":"287","line":15,"column":10,"nodeType":"221","messageId":"222","endLine":15,"endColumn":19},{"ruleId":"219","severity":1,"message":"244","line":18,"column":8,"nodeType":"221","messageId":"222","endLine":18,"endColumn":14},{"ruleId":"219","severity":1,"message":"245","line":39,"column":12,"nodeType":"221","messageId":"222","endLine":39,"endColumn":18},{"ruleId":"219","severity":1,"message":"240","line":39,"column":20,"nodeType":"221","messageId":"222","endLine":39,"endColumn":29},{"ruleId":"219","severity":1,"message":"288","line":43,"column":12,"nodeType":"221","messageId":"222","endLine":43,"endColumn":22},{"ruleId":"219","severity":1,"message":"289","line":43,"column":24,"nodeType":"221","messageId":"222","endLine":43,"endColumn":37},{"ruleId":"219","severity":1,"message":"290","line":54,"column":12,"nodeType":"221","messageId":"222","endLine":54,"endColumn":24},{"ruleId":"219","severity":1,"message":"291","line":54,"column":26,"nodeType":"221","messageId":"222","endLine":54,"endColumn":41},{"ruleId":"219","severity":1,"message":"292","line":55,"column":11,"nodeType":"221","messageId":"222","endLine":55,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":88,"column":5,"nodeType":"260","messageId":"261","endLine":88,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":94,"column":22,"nodeType":"254","messageId":"255","endLine":94,"endColumn":24},{"ruleId":"252","severity":1,"message":"253","line":114,"column":22,"nodeType":"254","messageId":"255","endLine":114,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":121,"column":5,"nodeType":"260","messageId":"261","endLine":121,"endColumn":36},{"ruleId":"258","severity":1,"message":"259","line":134,"column":5,"nodeType":"260","messageId":"261","endLine":134,"endColumn":44},{"ruleId":"258","severity":1,"message":"259","line":175,"column":5,"nodeType":"260","messageId":"261","endLine":175,"endColumn":44},{"ruleId":"278","severity":1,"message":"279","line":261,"column":45,"nodeType":"237","endLine":261,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":264,"column":45,"nodeType":"237","endLine":264,"endColumn":49},{"ruleId":"235","severity":1,"message":"236","line":376,"column":25,"nodeType":"237","endLine":376,"endColumn":65},{"ruleId":"219","severity":1,"message":"224","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":10,"column":56,"nodeType":"237","endLine":10,"endColumn":150},{"ruleId":"219","severity":1,"message":"224","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"244","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":14},{"ruleId":"219","severity":1,"message":"245","line":12,"column":12,"nodeType":"221","messageId":"222","endLine":12,"endColumn":18},{"ruleId":"219","severity":1,"message":"280","line":12,"column":31,"nodeType":"221","messageId":"222","endLine":12,"endColumn":43},{"ruleId":"295","severity":1,"message":"296","line":25,"column":7,"nodeType":"297","endLine":25,"endColumn":9,"suggestions":"298"},{"ruleId":"258","severity":1,"message":"259","line":43,"column":5,"nodeType":"260","messageId":"261","endLine":45,"endColumn":11},{"ruleId":"299","severity":1,"message":"300","line":14,"column":20,"nodeType":"301","messageId":"302","endLine":14,"endColumn":31},{"ruleId":"219","severity":1,"message":"303","line":44,"column":8,"nodeType":"221","messageId":"222","endLine":44,"endColumn":31},{"ruleId":"219","severity":1,"message":"304","line":45,"column":8,"nodeType":"221","messageId":"222","endLine":45,"endColumn":37},{"ruleId":"219","severity":1,"message":"305","line":46,"column":8,"nodeType":"221","messageId":"222","endLine":46,"endColumn":34},{"ruleId":"219","severity":1,"message":"306","line":48,"column":7,"nodeType":"221","messageId":"222","endLine":48,"endColumn":32},{"ruleId":"219","severity":1,"message":"307","line":49,"column":7,"nodeType":"221","messageId":"222","endLine":49,"endColumn":27},{"ruleId":"219","severity":1,"message":"308","line":50,"column":7,"nodeType":"221","messageId":"222","endLine":50,"endColumn":36},{"ruleId":"219","severity":1,"message":"309","line":51,"column":7,"nodeType":"221","messageId":"222","endLine":51,"endColumn":42},{"ruleId":"219","severity":1,"message":"310","line":52,"column":7,"nodeType":"221","messageId":"222","endLine":52,"endColumn":29},{"ruleId":"219","severity":1,"message":"251","line":53,"column":7,"nodeType":"221","messageId":"222","endLine":53,"endColumn":39},{"ruleId":"252","severity":1,"message":"253","line":148,"column":21,"nodeType":"254","messageId":"255","endLine":148,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":157,"column":27,"nodeType":"254","messageId":"255","endLine":157,"endColumn":29},{"ruleId":"219","severity":1,"message":"311","line":158,"column":15,"nodeType":"221","messageId":"222","endLine":158,"endColumn":17},"no-unused-vars","'RegistrationPage' is defined but never used.","Identifier","unusedVar","'SavedIcon' is defined but never used.","'useState' is defined but never used.","'Header' is defined but never used.","'CreateFolder' is defined but never used.","'useCookies' is defined but never used.","'errors' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","'setErrorMessages' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'handleSignUp' is assigned a value but never used.","'closeIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'Button' is defined but never used.","'Deletepopup' is defined but never used.","'handleShowDelete' is defined but never used.","'cookie' is defined but never used.","'cookie' is assigned a value but never used.","'Carousel' is defined but never used.","'background' is defined but never used.","'index' is assigned a value but never used.","'front' is assigned a value but never used.","'back' is assigned a value but never used.","'handleShowFlashcardDeleteConfirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleSelect' is assigned a value but never used.","'res' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleSaveFlashcardStatus' is assigned a value but never used.","'updatedflashcardstatus' is assigned a value but never used.","'updateCards' is assigned a value but never used.","no-const-assign","'cards' is constant.","const","'handleDownload' is assigned a value but never used.","'fileDownloadUrl' is assigned a value but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'folder' is defined but never used.","'libstorage' is defined but never used.","'navigate' is assigned a value but never used.","'rate' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'removeCookie' is assigned a value but never used.","'useRef' is defined but never used.","'handleSeeMore' is assigned a value but never used.","'handleFolderClick' is assigned a value but never used.","'useEffect' is defined but never used.","'UNSAFE_enhanceManualRouteObjects' is defined but never used.","'ButtonGroup' is defined but never used.","'getCookie' is defined but never used.","'destFolder' is assigned a value but never used.","'setDestFolder' is assigned a value but never used.","'checkedState' is assigned a value but never used.","'setCheckedState' is assigned a value but never used.","'handleGroup' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'library'. Either include it or remove the dependency array.","ArrayExpression",["312"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'showFolderDeleteConfirm' is assigned a value but never used.","'showFlashcardsetDeleteConfirm' is assigned a value but never used.","'showFlashcardDeleteConfirm' is assigned a value but never used.","'handleCloseFlashsetDelCon' is assigned a value but never used.","'handleCloseFolDelCon' is assigned a value but never used.","'handleShowFolderDeleteConfirm' is assigned a value but never used.","'handleShowFlashcardsetDeleteConfirm' is assigned a value but never used.","'handleCloseFlashDelCon' is assigned a value but never used.","'id' is assigned a value but never used.",{"desc":"313","fix":"314"},"Update the dependencies array to be: [library]",{"range":"315","text":"316"},[875,877],"[library]"]